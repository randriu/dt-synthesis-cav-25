Solving...
Starting with fixed depth 6
Set parameter Username
Academic license - for non-commercial use only - expires 2025-09-20
Set parameter Threads to value 1
Set parameter TimeLimit to value 1200
Gurobi Optimizer version 10.0.0 build v10.0.0rc2 (linux64)

CPU model: AMD EPYC 9124 16-Core Processor, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 32 physical cores, 64 logical processors, using up to 1 threads

Optimize a model with 1284007 rows, 242526 columns and 11238658 nonzeros
Model fingerprint: 0x4dccc6d0
Variable types: 16460 continuous, 226066 integer (226066 binary)
Coefficient statistics:
  Matrix range     [1e-02, 1e+02]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+02]
  RHS range        [1e+00, 6e+00]
Presolve removed 378 rows and 567 columns (presolve time = 5s) ...
Presolve removed 378 rows and 567 columns (presolve time = 10s) ...
Presolve removed 378 rows and 567 columns (presolve time = 15s) ...
Presolve removed 378 rows and 567 columns (presolve time = 20s) ...
Presolve removed 378 rows and 567 columns
Presolve time: 23.58s
Presolved: 1283629 rows, 241959 columns, 11028208 nonzeros
Variable types: 16460 continuous, 225499 integer (225499 binary)
Found heuristic solution: objective -99.9999995
Root relaxation presolved: 241959 rows, 1525588 columns, 11270167 nonzeros


Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   0.000000e+00   2.640100e+04     38s
  185847   -4.4295616e+01   0.000000e+00   7.247808e+01     40s
  214639   -4.7710548e+01   0.000000e+00   0.000000e+00     41s
  214639   -4.7710548e+01   0.000000e+00   0.000000e+00     41s

Root relaxation: objective -4.771055e+01, 214639 iterations, 10.49 seconds (28.57 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0  -47.71055    0 3386 -100.00000  -47.71055  52.3%     -   61s
     0     0  -47.71055    0 5080 -100.00000  -47.71055  52.3%     -   81s
     0     0  -47.71055    0 5596 -100.00000  -47.71055  52.3%     -  146s
     0     0  -47.71055    0 5596 -100.00000  -47.71055  52.3%     -  153s
     0     0  -47.71055    0 7287 -100.00000  -47.71055  52.3%     -  216s
H    0     0                     -99.6879053  -47.71055  52.1%     -  219s
     0     0  -47.71055    0 7503  -99.68791  -47.71055  52.1%     -  270s
     0     0  -47.71055    0 8151  -99.68791  -47.71055  52.1%     -  275s
     0     0  -47.71055    0 8714  -99.68791  -47.71055  52.1%     -  306s
     0     0  -47.71055    0 8714  -99.68791  -47.71055  52.1%     -  334s
     0     0  -47.71055    0 8834  -99.68791  -47.71055  52.1%     -  372s
     0     0  -47.71055    0 8834  -99.68791  -47.71055  52.1%     -  400s
     0     2  -47.71055    0 8834  -99.68791  -47.71055  52.1%     -  485s
     6     8  -47.71055    4 5061  -99.68791  -47.71055  52.1%   678  490s
    10    12  -47.71055    7 5738  -99.68791  -47.71055  52.1%   412  496s
    14    16  -47.71055    9 4612  -99.68791  -47.71055  52.1%   295  500s
    19    21  -47.71055   12 4612  -99.68791  -47.71055  52.1%   218  506s
    24    26  -47.71055   15 4612  -99.68791  -47.71055  52.1%   173  510s
    27    29  -47.71055   17 4612  -99.68791  -47.71055  52.1%   154  519s
    28    30  -47.71055   17 4612  -99.68791  -47.71055  52.1%   148  520s
    33    35  -47.71055   20 4611  -99.68791  -47.71055  52.1%   126  525s
    37    39  -47.71055   22 4612  -99.68791  -47.71055  52.1%   113  530s
    42    44  -47.71055   25 5176  -99.68791  -47.71055  52.1%   100  536s
    49    51  -47.71055   30 5177  -99.68791  -47.71055  52.1%  86.5  540s
H   52    52                     -99.6768702  -47.71055  52.1%  81.6  547s
    54    56  -47.71055   32 4612  -99.67687  -47.71055  52.1%  96.1  561s
    60    62  -47.71676   35 5518  -99.67687  -47.71055  52.1%   110  565s
    66    68  -47.71055   39 6869  -99.67687  -47.71055  52.1%   114  570s
    73    75  -47.71055   44 4614  -99.67687  -47.71055  52.1%   110  575s
    78    80  -47.71055   46 6436  -99.67687  -47.71055  52.1%   112  581s
    81    83  -47.71055   48 8056  -99.67687  -47.71055  52.1%   111  585s
    88    90  -47.71055   52 5199  -99.67687  -47.71055  52.1%   113  590s
    94    96  -47.71055   55 6781  -99.67687  -47.71055  52.1%   115  595s
   101   103  -47.71055   60 9262  -99.67687  -47.71055  52.1%   115  601s
   103   105  -47.71134   61 9536  -99.67687  -47.71055  52.1%   127  605s
   107   109  -50.77052   64 17720  -99.67687  -47.71055  52.1%   132  617s
   108   110  -48.16687   64 5540  -99.67687  -47.71055  52.1%   131  626s
   112   114  -48.16687   67 4429  -99.67687  -47.71055  52.1%   136  630s
   115   117  -58.14821   68 8629  -99.67687  -47.71055  52.1%   179  638s
   117   117  -63.19836   69 5564  -99.67687  -47.71055  52.1%   178  640s
   118   118  -64.76214   70 17723  -99.67687  -47.71055  52.1%   239  656s
   120   118  -66.54634   71 17629  -99.67687  -47.71055  52.1%   236  660s
   123   119  -66.54634   73 16777  -99.67687  -47.71055  52.1%   231  666s
   126   122  -66.54634   75 11471  -99.67687  -47.71055  52.1%   229  670s
   131   127  -66.54634   79 6607  -99.67687  -47.71055  52.1%   221  675s
   134   126     cutoff   81       -99.67687  -47.71055  52.1%   237  680s
   137   127     cutoff   82       -99.67687  -47.71055  52.1%   247  686s
   139   127     cutoff   83       -99.67687  -47.71055  52.1%   263  691s
   143   131  -66.54634   87 8776  -99.67687  -47.71055  52.1%   264  695s
   146   134  -66.54634   89 8770  -99.67687  -47.71055  52.1%   273  700s
   147   133     cutoff   89       -99.67687  -47.71055  52.1%   311  705s
   151   137  -66.54634   93 8522  -99.67687  -47.71055  52.1%   320  710s
   154   140  -82.73760   96 6967  -99.67687  -47.71055  52.1%   339  719s
   155   141  -93.45920   96 7338  -99.67687  -47.71055  52.1%   345  721s
   158   144  -82.73760   98 6028  -99.67687  -47.71055  52.1%   339  725s
   161   147  -82.73760  100 6317  -99.67687  -47.71055  52.1%   370  730s
   163   149  -83.73538  102 10761  -99.67687  -47.71055  52.1%   377  738s
   164   150  -95.85762  102 7941  -99.67687  -47.71055  52.1%   388  741s
   165   151  -92.50590  103 4386  -99.67687  -47.71055  52.1%   410  749s
   166   152  -83.81154  103 9573  -99.67687  -47.71055  52.1%   407  750s
   168   152     cutoff  104       -99.67687  -47.71055  52.1%   436  758s
   169   153  -93.72338  105 3409  -99.67687  -47.71055  52.1%   438  760s
   177   161  -93.72338  113 2735  -99.67687  -47.71055  52.1%   419  765s
   183   167  -93.72338  119 3498  -99.67687  -47.71055  52.1%   406  770s
   190   174  -93.72338  126 4198  -99.67687  -47.71055  52.1%   391  775s
   197   181  -93.72338  133 1616  -99.67687  -47.71055  52.1%   377  780s
   205   189  -93.72338  140 3863  -99.67687  -47.71055  52.1%   362  785s
   212   194     cutoff  147       -99.67687  -47.71055  52.1%   361  792s
   214   196  -96.04690  148 1685  -99.67687  -47.71055  52.1%   368  796s
   216   198  -96.04690  149 1685  -99.67687  -47.71055  52.1%   365  801s
   218   200  -96.83836  150 1151  -99.67687  -47.71055  52.1%   375  805s
   225   203  -98.28416  154 1241  -99.67687  -47.71055  52.1%   367  810s
   226   202     cutoff  155       -99.67687  -47.71055  52.1%   376  815s
   232   206  -99.49760  158   14  -99.67687  -47.71055  52.1%   375  820s
H  235   207                     -99.5006438  -47.71055  52.1%   372  824s
   236   210  -99.49743  160   14  -99.50064  -47.71055  52.1%   371  825s
H  238   209                     -99.4988037  -47.71055  52.0%   369  827s
*  240   209             162     -99.4975907  -47.71055  52.0%   367  829s
   244   207  -47.71055    6 5613  -99.49759  -47.71055  52.0%   361  833s
   248   211  -47.71055    9 3348  -99.49759  -47.71055  52.0%   355  835s
   256   219  -47.71055   13 3676  -99.49759  -47.71055  52.0%   344  840s
H  260   220                     -99.4248456  -47.71055  52.0%   339  844s
   261   223  -47.71055   17 3676  -99.42485  -47.71055  52.0%   338  845s
   269   231  -47.71055   22 2547  -99.42485  -47.71055  52.0%   328  850s
   275   237  -47.71676   25 3571  -99.42485  -47.71055  52.0%   326  855s
   282   244  -47.71055   30 4241  -99.42485  -47.71055  52.0%   321  865s
H  286   242                     -98.9633961  -47.71055  51.8%   318  871s
   292   250  -47.71400   36 6372  -98.96340  -47.71055  51.8%   319  875s
   296   254  -55.03365   38 9254  -98.96340  -47.71055  51.8%   320  881s
   305   259  -48.16687   44 6772  -98.96340  -47.71055  51.8%   312  885s
H  313   261                     -97.4577282  -47.71055  51.0%   307  892s
   318   264     cutoff   52       -97.45773  -47.71055  51.0%   305  895s
   326   270  -66.60217   57 6994  -97.45773  -47.71055  51.0%   298  902s
   333   277  -66.60217   61 5694  -97.45773  -47.71055  51.0%   292  906s
H  339   281                     -97.4577254  -47.71055  51.0%   288  911s
   343   287  -75.13825   67 6222  -97.45773  -47.71055  51.0%   285  916s
   349   293  -75.13825   71 6220  -97.45773  -47.71055  51.0%   280  921s
   352   296  -75.13825   73 7538  -97.45773  -47.71055  51.0%   285  925s
   359   303  -75.13825   78 7053  -97.45773  -47.71055  51.0%   297  930s
   365   309  -75.13825   83 7783  -97.45773  -47.71055  51.0%   299  937s
   368   312  -75.13825   84 7126  -97.45773  -47.71055  51.0%   312  940s
   374   318  -75.13825   89 6518  -97.45773  -47.71055  51.0%   310  946s
   379   323  -75.13825   93 5371  -97.45773  -47.71055  51.0%   307  950s
   382   326  -75.13825   94 6072  -97.45773  -47.71055  51.0%   309  955s
   390   334  -75.13825  100 5464  -97.45773  -47.71055  51.0%   308  960s
   395   339  -75.13825  104 7435  -97.45773  -47.71055  51.0%   308  965s
   401   343  -75.13825  107 7200  -97.45773  -47.71055  51.0%   315  970s
   406   346  -79.49415  110 4418  -97.45773  -47.71055  51.0%   318  976s
   408   348  -92.11374  112 8373  -97.45773  -47.71055  51.0%   325  980s
   413   351  -92.56985  115 6060  -97.45773  -47.71055  51.0%   326  985s
   418   356  -92.56985  118 5577  -97.45773  -47.71055  51.0%   323  990s
   426   364  -92.56985  123 4359  -97.45773  -47.71055  51.0%   317  995s
   433   371  -92.56985  128 4766  -97.45773  -47.71055  51.0%   313 1001s
   438   376  -92.56985  132 6006  -97.45773  -47.71055  51.0%   313 1005s
H  443   379                     -97.4577222  -47.71055  51.0%   310 1009s
   444   382  -92.56985  137 6764  -97.45772  -47.71055  51.0%   312 1010s
   453   391  -92.56985  146 5317  -97.45772  -47.71055  51.0%   309 1015s
   460   398  -92.56985  153 5943  -97.45772  -47.71055  51.0%   305 1020s
   469   407  -92.56985  162 4892  -97.45772  -47.71055  51.0%   300 1025s
   476   414  -92.56985  169 4727  -97.45772  -47.71055  51.0%   297 1032s
   481   419  -96.61883  174 1861  -97.45772  -47.71055  51.0%   296 1035s
   485   423  -95.28864  176 7002  -97.45772  -47.71055  51.0%   304 1041s
   489   427  -95.32694  178 6950  -97.45772  -47.71055  51.0%   304 1045s
   495   433  -95.69284  183 4391  -97.45772  -47.71055  51.0%   305 1052s
   500   438  -95.37940  186 3611  -97.45772  -47.71055  51.0%   303 1055s
   506   444  -95.37940  189 3367  -97.45772  -47.71055  51.0%   301 1060s
H  510   441                     -96.7663736  -47.71055  50.7%   302 1075s

Cutting planes:
  Implied bound: 4
  MIR: 18
  Flow cover: 15

Explored 510 nodes (398038 simplex iterations) in 1200.06 seconds (3782.83 work units)
Thread count was 1 (of 64 available processors)

Solution count 10: -96.7664 -97.4577 -97.4577 ... -99.6769

Time limit reached
Best objective -9.676637361923e+01, best bound -4.771054798326e+01, gap 50.6951%
Tree policy:
if required_gold <= 3.0:
    if required_gem <= 4.0:
        if x <= 0.0:
            if y <= 0.0:
                if gem <= 0.0:
                    return '__random__'
                else:
                    return 'down'
            else:
                return 'down'
        else:
            if y <= 4.0:
                if x <= 0.0:
                    return 'down'
                else:
                    if x <= 4.0:
                        return 'down'
                    else:
                        return 'top'
            else:
                if x <= 0.0:
                    return 'right'
                else:
                    if x <= 3.0:
                        return 'down'
                    else:
                        return 'left'
    else:
        return 'down'
else:
    if required_gold <= 3.0:
        if required_gem <= 4.0:
            return 'right'
        else:
            if required_gem <= 5.0:
                return 'right'
            else:
                if required_gem <= 5.0:
                    return 'down'
                else:
                    return 'right'
    else:
        if attacked <= 0.0:
            if required_gold <= 4.0:
                if required_gold <= 3.0:
                    if required_gem <= 5.0:
                        return 'down'
                    else:
                        return 'right'
                else:
                    if required_gem <= 4.0:
                        return 'down'
                    else:
                        return '__random__'
            else:
                if gold <= 0.0:
                    if required_gem <= 4.0:
                        return 'down'
                    else:
                        return 'top'
                else:
                    return 'down'
        else:
            if required_gem <= 5.0:
                if y <= 0.0:
                    return 'right'
                else:
                    return 'top'
            else:
                if required_gem <= 5.0:
                    return 'down'
                else:
                    if required_gem <= 5.0:
                        return 'top'
                    else:
                        return 'right'
Optimal decision tree (depth=6) value: -96.76637361923471
Writing result files...
