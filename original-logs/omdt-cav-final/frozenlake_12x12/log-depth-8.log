Solving...
Starting with fixed depth 8
Set parameter Username
Academic license - for non-commercial use only - expires 2025-09-20
Set parameter Threads to value 1
Set parameter TimeLimit to value 1200
Gurobi Optimizer version 10.0.0 build v10.0.0rc2 (linux64)

CPU model: AMD EPYC 9124 16-Core Processor, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 32 physical cores, 64 logical processors, using up to 1 threads

Optimize a model with 222559 rows, 45560 columns and 2295956 nonzeros
Model fingerprint: 0x2eb6c247
Variable types: 720 continuous, 44840 integer (44840 binary)
Coefficient statistics:
  Matrix range     [1e-02, 1e+02]
  Objective range  [2e-01, 3e-01]
  Bounds range     [1e+00, 1e+02]
  RHS range        [1e+00, 8e+00]
Presolve removed 2047 rows and 1275 columns
Presolve time: 3.26s
Presolved: 220512 rows, 44285 columns, 2261732 nonzeros
Variable types: 720 continuous, 43565 integer (43565 binary)
Found heuristic solution: objective 0.0001721
Root relaxation presolved: 44285 rows, 264797 columns, 2306017 nonzeros


Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    2.0202020e+01   0.000000e+00   1.818081e+02      5s
   42325    3.4872372e-01   0.000000e+00   0.000000e+00      9s
   42325    3.4872372e-01   0.000000e+00   0.000000e+00      9s

Root relaxation: objective 3.487237e-01, 42325 iterations, 4.78 seconds (18.61 work units)
Total elapsed time = 19.89s
Total elapsed time = 21.26s

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.34872    0  634    0.00017    0.34872      -     -   24s
     0     0    0.34872    0 1156    0.00017    0.34872      -     -   27s
H    0     0                       0.0007774    0.34872      -     -   28s
H    0     0                       0.0027433    0.34872      -     -   29s
     0     0    0.34872    0 1155    0.00274    0.34872      -     -   29s
     0     0    0.34872    0  250    0.00274    0.34872      -     -   37s
     0     0    0.34872    0  251    0.00274    0.34872      -     -   38s
     0     0    0.34872    0  523    0.00274    0.34872      -     -   46s
H    0     0                       0.0073891    0.34872  4619%     -   49s
     0     0    0.34872    0  523    0.00739    0.34872  4619%     -   50s
     0     0    0.34872    0  356    0.00739    0.34872  4619%     -   58s
     0     0    0.34872    0  322    0.00739    0.34872  4619%     -   59s
     0     0    0.34872    0  273    0.00739    0.34872  4619%     -   67s
H    0     0                       0.1479968    0.34872   136%     -   69s
     0     0    0.34872    0  423    0.14800    0.34872   136%     -   69s
     0     0    0.34872    0  248    0.14800    0.34872   136%     -   77s
     0     0    0.34872    0  268    0.14800    0.34872   136%     -   78s
     0     0    0.34872    0  193    0.14800    0.34872   136%     -   85s
     0     0    0.34872    0  219    0.14800    0.34872   136%     -  102s
     0     0    0.34872    0  213    0.14800    0.34872   136%     -  108s
H    0     0                       0.1479968    0.34872   136%     -  112s
     0     2    0.34872    0  209    0.14800    0.34872   136%     -  132s
     3     5    0.34872    2  525    0.14800    0.34872   136%   905  139s
     6     8    0.34872    3  846    0.14800    0.34872   136%   480  140s
    17    19    0.34872   10  268    0.14800    0.34872   136%   321  145s
    33    35    0.34872   19  951    0.14800    0.34872   136%   185  150s
    47    49    0.34872   26  607    0.14800    0.34872   136%   178  155s
H   52    52                       0.1479969    0.34872   136%   163  157s
H   54    54                       0.1494987    0.34872   133%   182  158s
    66    68    0.34872   38  907    0.14950    0.34872   133%   154  160s
    84    86    0.34872   50  291    0.14950    0.34872   133%   150  166s
   100   102    0.34872   61  456    0.14950    0.34872   133%   149  170s
   121   123    0.34872   74  498    0.14950    0.34872   133%   141  175s
   134   136    0.32766   80  450    0.14950    0.34872   133%   130  180s
   152   154    0.32474   93  402    0.14950    0.34872   133%   125  185s
   168   165    0.15784  108  623    0.14950    0.34872   133%   118  190s
H  189   177                       0.1832898    0.34872  90.3%   107  193s
   196   186    0.34149   19  927    0.18329    0.34872  90.3%   104  195s
H  216   204                       0.1832945    0.34872  90.3%  96.4  199s
   223   213    0.34149   35 1174    0.18329    0.34872  90.3%  93.5  200s
   255   243    0.32165   59  900    0.18329    0.34872  90.3%  83.6  205s
   289   275    0.26804   83  881    0.18329    0.34872  90.3%  75.1  210s
H  297   281                       0.1876600    0.34872  85.8%  73.3  211s
H  312   295                       0.1879662    0.34872  85.5%  70.8  214s
   317   302    0.26804   98  676    0.18797    0.34872  85.5%  70.0  215s
   351   336    0.26804  119  584    0.18797    0.34872  85.5%  64.9  220s
   376   353    0.24639  139  525    0.18797    0.34872  85.5%  62.9  225s
   402   359    0.34872    3  802    0.18797    0.34872  85.5%  60.6  230s
   432   389    0.31818   25  729    0.18797    0.34872  85.5%  57.5  235s
H  442   386                       0.2461914    0.34872  41.6%  56.3  236s
   468   414    0.31711   49  798    0.24619    0.34872  41.6%  54.2  240s
H  494   434                       0.2502234    0.34872  39.4%  52.8  244s
   502   444    0.31711   70 1019    0.25022    0.34872  39.4%  52.0  245s
   511   452    0.34872   27  213    0.25022    0.34872  39.4%  51.3  258s
   513   453    0.34872   24  342    0.25022    0.34872  39.4%  51.1  277s
   514   454    0.26792  123  219    0.25022    0.34872  39.4%  51.0  291s
   516   455    0.26804   89 1242    0.25022    0.34872  39.4%  50.8  313s
   518   457    0.34872   39  242    0.25022    0.34872  39.4%  50.6  327s
   520   458    0.34149   23  239    0.25022    0.34872  39.4%  50.4  339s
   521   459    0.34872   33  240    0.25022    0.34872  39.4%  50.3  341s
   522   459    0.34872    4  204    0.25022    0.34872  39.4%  50.2  352s
   524   461    0.34872   28  191    0.25022    0.34872  39.4%  50.0  367s
   526   462    0.31711   61  314    0.25022    0.34872  39.4%  49.8  378s
   528   463    0.34149   23  216    0.25022    0.34872  39.4%  49.6  387s
   530   465    0.34872   14  180    0.25022    0.34872  39.4%  49.4  399s
   531   465    0.34149   29  963    0.25022    0.34872  39.4%  49.3  401s
   532   466    0.26804  115  297    0.25022    0.34872  39.4%  49.2  411s
   533   467    0.34872   63  297    0.25022    0.34872  39.4%  49.2  418s
   534   467    0.34872   27  297    0.25022    0.34872  39.4%  49.1  430s
   535   470    0.34872   13  820    0.25022    0.34872  39.4%   192  438s
   538   472    0.34872   14  729    0.25022    0.34872  39.4%   192  440s
   553   482    0.34872   22  358    0.25022    0.34872  39.4%   193  452s
   559   486    0.34872   25  839    0.25022    0.34872  39.4%   192  455s
   564   489    0.34872   27  711    0.25022    0.34872  39.4%   191  464s
   565   490    0.34872   28  491    0.25022    0.34872  39.4%   190  465s
   584   503    0.34872   37  746    0.25022    0.34872  39.4%   185  470s
   594   509    0.34872   42  353    0.25022    0.34872  39.4%   186  477s
   604   516    0.34872   47  418    0.25022    0.34872  39.4%   184  480s
H  612   495                       0.2502237    0.34872  39.4%   182  481s
   631   510    0.34872   61  588    0.25022    0.34872  39.4%   177  485s
   634   512    0.34872   62  304    0.25022    0.34872  39.4%   181  490s
   653   525    0.34872   72  239    0.25022    0.34872  39.4%   180  498s
   654   525    0.34872   72  342    0.25022    0.34872  39.4%   185  504s
   655   526    0.34872   73  357    0.25022    0.34872  39.4%   185  505s
H  664   507                       0.2609790    0.34872  33.6%   183  508s
   672   514    0.34872   81  879    0.26098    0.34872  33.6%   182  510s
   687   524    0.34872   89  771    0.26098    0.34872  33.6%   180  515s
H  690   503                       0.2609790    0.34872  33.6%   179  515s
   700   512    0.34872   95  488    0.26098    0.34872  33.6%   179  520s
   728   531    0.34872  109  562    0.26098    0.34872  33.6%   173  525s
   747   543    0.34872  119  793    0.26098    0.34872  33.6%   171  530s
   772   560    0.34872  131  562    0.26098    0.34872  33.6%   166  535s
   775   562    0.34872  133  545    0.26098    0.34872  33.6%   170  540s
H  794   552                       0.2668231    0.34872  30.7%   166  545s
   810   561    0.31087  150  697    0.26682    0.34872  30.7%   166  550s
   826   567    0.31087  158  920    0.26682    0.34872  30.7%   163  555s
H  831   548                       0.2668232    0.34872  30.7%   163  562s
   842   557    0.29197  167  568    0.26682    0.34872  30.7%   161  565s
   846   559    0.29197  169  564    0.26682    0.34872  30.7%   160  570s
H  858   546                       0.2668234    0.34872  30.7%   158  577s
   868   555    0.29197  180 1096    0.26682    0.34872  30.7%   156  580s
H  885   546                       0.2668236    0.34872  30.7%   154  588s
   894   554    0.29197  193  937    0.26682    0.34872  30.7%   152  590s
H  912   548                       0.2668531    0.34872  30.7%   149  598s
   918   554    0.29197  205  836    0.26685    0.34872  30.7%   149  600s
H  924   540                       0.2668540    0.34872  30.7%   148  601s
   938   549    0.27971  215  590    0.26685    0.34872  30.7%   146  605s
H  939   532                       0.2668600    0.34872  30.7%   146  608s
   944   536    0.29197  218  619    0.26686    0.34872  30.7%   145  610s
H  966   528                       0.2668610    0.34872  30.7%   142  618s
   972   533    0.29028  232  435    0.26686    0.34872  30.7%   141  620s
H  979   517                       0.2668610    0.34872  30.7%   140  624s
   979   518    0.28144  235  411    0.26686    0.34872  30.7%   141  625s
H  993   507                       0.2686657    0.34872  29.8%   139  630s
H 1003   499                       0.2712588    0.34872  28.6%   138  633s
  1012   506    0.27639  252  536    0.27126    0.34872  28.6%   137  635s
H 1021   488                       0.2712591    0.34872  28.6%   136  641s
  1036   500    0.34872   62  444    0.27126    0.34872  28.6%   134  645s
  1048   508    0.34872   68  955    0.27126    0.34872  28.6%   134  654s
  1053   511    0.34872   70 1113    0.27126    0.34872  28.6%   134  655s
  1066   520    0.34872   77  312    0.27126    0.34872  28.6%   135  660s
H 1075   513                       0.2712594    0.34872  28.6%   134  666s
  1091   526    0.34872   89  656    0.27126    0.34872  28.6%   133  670s
  1102   533    0.34872   95  454    0.27126    0.34872  28.6%   134  680s
  1117   543    0.34872  102  302    0.27126    0.34872  28.6%   134  686s
  1129   551    0.34872  108  420    0.27126    0.34872  28.6%   133  693s
  1134   552    0.34872  111  638    0.27126    0.34872  28.6%   133  695s
  1154   571    0.34872  121  649    0.27126    0.34872  28.6%   132  700s
  1156   573    0.34872  122  394    0.27126    0.34872  28.6%   132  706s
  1168   585    0.34872  128  819    0.27126    0.34872  28.6%   131  710s
  1183   598    0.31842  135 1096    0.27126    0.34872  28.6%   130  717s
H 1186   598                       0.2716327    0.34872  28.4%   130  719s
  1191   605    0.31803  139 1092    0.27163    0.34872  28.4%   129  720s
H 1210   622                       0.2716359    0.34872  28.4%   127  724s
H 1212   624                       0.2725892    0.34872  27.9%   127  725s
  1236   650    0.31838  161 1212    0.27259    0.34872  27.9%   125  730s
H 1238   623                       0.2782478    0.34872  25.3%   125  732s
  1249   628    0.31838  171  452    0.27825    0.34872  25.3%   124  735s
H 1264   637                       0.2782481    0.34872  25.3%   123  738s
  1268   640    0.31410  181  487    0.27825    0.34872  25.3%   122  740s
H 1290   648                       0.2821717    0.34872  23.6%   120  745s
  1306   660    0.31368  201  474    0.28217    0.34872  23.6%   119  750s
H 1319   656                       0.2821760    0.34872  23.6%   119  754s
  1325   657    0.33248   64  820    0.28218    0.34872  23.6%   119  755s
H 1346   676                       0.2828626    0.34872  23.3%   118  764s
  1347   679    0.34872   75  453    0.28286    0.34872  23.3%   118  765s
  1368   696    0.29729   86 2361    0.28286    0.34872  23.3%   117  770s
  1376   704    0.30472   90 2274    0.28286    0.34872  23.3%   116  775s
  1399   723     cutoff  102         0.28286    0.34872  23.3%   115  780s
H 1401   719                       0.2829900    0.34872  23.2%   115  784s
  1404   719     cutoff  102         0.28299    0.34872  23.2%   115  785s
H 1420   728                       0.2830160    0.34872  23.2%   114  788s
  1423   733    0.34872   72  343    0.28302    0.34872  23.2%   115  790s
  1441   751    0.34872   79 1073    0.28302    0.34872  23.2%   114  795s
H 1446   754                       0.2830173    0.34872  23.2%   115  800s
  1449   759    0.34872   82  315    0.28302    0.34872  23.2%   120  805s
  1453   763    0.34872   82  263    0.28302    0.34872  23.2%   122  810s
  1458   768    0.32383   84  370    0.28302    0.34872  23.2%   124  815s
H 1482   790                       0.2830173    0.34872  23.2%   122  819s
  1483   793    0.31875  108  855    0.28302    0.34872  23.2%   122  820s
  1507   817    0.31860  118 1144    0.28302    0.34872  23.2%   121  825s
H 1509   817                       0.2830238    0.34872  23.2%   120  827s
  1522   832    0.31860  123 1077    0.28302    0.34872  23.2%   120  830s
H 1536   844                       0.2830239    0.34872  23.2%   119  835s
H 1550   858                       0.2835198    0.34872  23.0%   118  838s
  1562   872    0.31858  145  699    0.28352    0.34872  23.0%   117  840s
H 1563   871                       0.2835203    0.34872  23.0%   117  841s
H 1576   884                       0.2835211    0.34872  23.0%   116  843s
  1587   897    0.31858  149  779    0.28352    0.34872  23.0%   116  845s
H 1602   909                       0.2835243    0.34872  23.0%   115  847s
  1619   928    0.31858  158  891    0.28352    0.34872  23.0%   114  850s
H 1628   935                       0.2835275    0.34872  23.0%   113  851s
  1650   959    0.31858  166 1090    0.28353    0.34872  23.0%   112  855s
H 1654   961                       0.2842753    0.34872  22.7%   112  856s
  1680   987    0.31858  179  937    0.28428    0.34872  22.7%   111  860s
  1704  1009    0.31857  189 1444    0.28428    0.34872  22.7%   109  865s
H 1706   986                       0.2904357    0.34872  20.1%   109  866s
  1727  1007    0.31834  201 1357    0.29044    0.34872  20.1%   108  870s
H 1732  1008                       0.2904519    0.34872  20.1%   108  871s
  1751  1027    0.31834  213 1279    0.29045    0.34872  20.1%   107  875s
H 1758   933                       0.3012474    0.34872  15.8%   106  877s
  1784   961    0.31834  224 1399    0.30125    0.34872  15.8%   105  880s
H 1833  1002                       0.3012483    0.34872  15.8%   102  884s
  1835  1005    0.30444  245  895    0.30125    0.34872  15.8%   102  885s
H 1860  1009                       0.3012653    0.34872  15.8%   104  893s
  1863  1011    0.34872  114  852    0.30127    0.34872  15.8%   104  895s
H 1887  1033                       0.3012654    0.34872  15.8%   103  903s
  1892  1039    0.34872  128  464    0.30127    0.34872  15.8%   103  905s
H 1914  1050                       0.3012657    0.34872  15.8%   103  913s
  1921  1059    0.30824   97  814    0.30127    0.34872  15.8%   103  915s
H 1941  1077                       0.3012658    0.34872  15.8%   102  924s
  1943  1081    0.30818  108  863    0.30127    0.34872  15.8%   102  925s
H 1966  1102                       0.3012658    0.34872  15.8%   101  928s
H 1968  1104                       0.3012702    0.34872  15.8%   101  931s
  1975  1113    0.30806  124  681    0.30127    0.34872  15.8%   101  939s
  1983  1121    0.30806  130  936    0.30127    0.34872  15.8%   100  940s
  1995  1133    0.30806  134  685    0.30127    0.34872  15.8%   100  948s
  2004  1142    0.30806  139 1047    0.30127    0.34872  15.8%   100  950s
H 2022  1155                       0.3027574    0.34872  15.2%  99.2  958s
H 2044  1177                       0.3027700    0.34872  15.2%  98.3  960s
H 2049  1182                       0.3027741    0.34872  15.2%  98.1  965s
H 2070  1203                       0.3027753    0.34872  15.2%  97.4  967s
  2076  1211    0.30806  158 1092    0.30278    0.34872  15.2%  97.2  971s
  2103  1238    0.30732  168  862    0.30278    0.34872  15.2%  96.1  976s
  2130  1263    0.30637  178 1162    0.30278    0.34872  15.2%  95.1  981s
  2161  1277    0.30462  190  945    0.30278    0.34872  15.2%  94.2  986s
  2188  1303    0.30437  201  780    0.30278    0.34872  15.2%  93.5  990s
  2215  1329    0.30437  205 1026    0.30278    0.34872  15.2%  93.3  995s
H 2253  1363                       0.3028134    0.34872  15.2%  92.0  999s
  2268  1378    0.30437  218  964    0.30281    0.34872  15.2%  91.7 1000s
H 2279  1387                       0.3028142    0.34872  15.2%  91.4 1001s
  2328  1410    0.31399  107 1744    0.30281    0.34872  15.2%  89.8 1005s
  2386  1468    0.31395  165  462    0.30281    0.34872  15.2%  87.8 1010s
H 2413  1493                       0.3028146    0.34872  15.2%  87.0 1014s
  2418  1500    0.31395  197  874    0.30281    0.34872  15.2%  86.8 1015s
  2440  1522    0.31395  219  693    0.30281    0.34872  15.2%  86.1 1020s
  2467  1549    0.31395  246 1074    0.30281    0.34872  15.2%  85.3 1026s
H 2487  1567                       0.3028150    0.34872  15.2%  84.6 1029s
  2494  1576    0.31395  273 1390    0.30282    0.34872  15.2%  84.4 1031s
  2525  1607    0.31356  304  821    0.30282    0.34872  15.2%  83.5 1035s
H 2539  1619                       0.3032600    0.34872  15.0%  83.0 1036s
  2572  1651    0.30745  351 1360    0.30326    0.34872  15.0%  82.1 1040s
H 2591  1655                       0.3035122    0.34872  14.9%  81.5 1043s
  2605  1662    0.33248   83  511    0.30351    0.34872  14.9%  81.2 1045s
H 2643  1679                       0.3035534    0.34872  14.9%  80.2 1050s
H 2669  1705                       0.3035732    0.34872  14.9%  79.6 1054s
  2682  1720    0.31807  131 1291    0.30357    0.34872  14.9%  79.3 1055s
H 2721  1757                       0.3035899    0.34872  14.9%  78.5 1060s
H 2747  1782                       0.3039108    0.34872  14.7%  77.8 1063s
  2771  1795    0.30610  209 1482    0.30391    0.34872  14.7%  77.3 1065s
H 2773  1646                       0.3049843    0.34872  14.3%  77.2 1066s
H 2799  1653                       0.3050676    0.34872  14.3%  76.9 1070s
  2825  1681    0.33113  104  379    0.30507    0.34872  14.3%  76.2 1075s
H 2846  1700                       0.3050697    0.34872  14.3%  75.8 1077s
H 2851  1705                       0.3050697    0.34872  14.3%  75.7 1079s
  2861  1717    0.32323  114  505    0.30507    0.34872  14.3%  75.5 1080s
H 2873  1727                       0.3050697    0.34872  14.3%  75.2 1087s
  2898  1754    0.30909  126  767    0.30507    0.34872  14.3%  74.7 1090s
H 2900  1754                       0.3050697    0.34872  14.3%  74.6 1096s
  2923  1779    0.30909  136  990    0.30507    0.34872  14.3%  74.3 1100s
H 2927  1781                       0.3050697    0.34872  14.3%  74.2 1107s
H 2929  1783                       0.3050703    0.34872  14.3%  74.1 1110s
H 2954  1808                       0.3050706    0.34872  14.3%  73.7 1115s
H 2955  1809                       0.3050706    0.34872  14.3%  73.7 1117s
H 2958  1812                       0.3050706    0.34872  14.3%  73.6 1127s
H 2981  1835                       0.3050707    0.34872  14.3%  73.1 1132s
H 2981  1835                       0.3050707    0.34872  14.3%  73.1 1135s
H 3011  1837                       0.3050712    0.34872  14.3%  72.7 1142s
H 3011  1837                       0.3050712    0.34872  14.3%  72.7 1145s
H 3037  1858                       0.3050716    0.34872  14.3%  72.2 1149s
H 3038  1859                       0.3050719    0.34872  14.3%  72.2 1154s
  3048  1871    0.30530  117  651    0.30507    0.34872  14.3%  72.0 1155s
H 3063  1884                       0.3050728    0.34872  14.3%  71.7 1158s
  3065  1888    0.30526  134  681    0.30507    0.34872  14.3%  71.7 1163s
  3079  1902    0.30526  148  783    0.30507    0.34872  14.3%  71.5 1165s
H 3092  1913                       0.3050820    0.34872  14.3%  71.3 1170s
  3118  1940    0.30524  187 1808    0.30508    0.34872  14.3%  70.8 1175s
  3139  1961    0.30524  208 1771    0.30508    0.34872  14.3%  70.5 1180s
  3146  1960    0.30523  208 1823    0.30508    0.34872  14.3%  70.4 1186s
  3173  1961    0.34872   54  488    0.30508    0.34872  14.3%  70.1 1197s
  3188  1976    0.34872   62  355    0.30508    0.34872  14.3%  70.3 1200s

Cutting planes:
  Gomory: 2
  Lift-and-project: 2
  Implied bound: 4
  MIR: 4
  Flow cover: 41
  Zero half: 10

Explored 3189 nodes (303110 simplex iterations) in 1200.05 seconds (4120.58 work units)
Thread count was 1 (of 64 available processors)

Solution count 10: 0.305082 0.305073 0.305072 ... 0.305071

Time limit reached
Best objective 3.050820297666e-01, best bound 3.487237168389e-01, gap 14.3049%
Tree policy:
if Y <= 6.0:
    if X <= 8.0:
        if Y <= 0.0:
            if X <= 7.0:
                if X <= 0.0:
                    return '(Left)'
                else:
                    return '(Right)'
            else:
                return '(Right)'
        else:
            if X <= 7.0:
                if X <= 6.0:
                    if X <= 5.0:
                        if X <= 1.0:
                            return '(Left)'
                        else:
                            if Y <= 2.0:
                                return '(Right)'
                            else:
                                return '(Down)'
                    else:
                        if Y <= 5.0:
                            if Y <= 3.0:
                                return '(Down)'
                            else:
                                return '(Up)'
                        else:
                            return '(Down)'
                else:
                    return '(Right)'
            else:
                if X <= 7.0:
                    return '(Left)'
                else:
                    if Y <= 5.0:
                        return '(Left)'
                    else:
                        return '(Down)'
    else:
        if Y <= 5.0:
            if X <= 9.0:
                return '(Left)'
            else:
                if Y <= 2.0:
                    return '(Left)'
                else:
                    return '(Down)'
        else:
            return '(Down)'
else:
    if Y <= 10.0:
        if X <= 6.0:
            if Y <= 8.0:
                if Y <= 7.0:
                    if X <= 3.0:
                        if X <= 1.0:
                            return '(Down)'
                        else:
                            return '(Left)'
                    else:
                        if X <= 4.0:
                            return '(Right)'
                        else:
                            return '(Down)'
                else:
                    if X <= 4.0:
                        if X <= 0.0:
                            return '(Up)'
                        else:
                            return '(Down)'
                    else:
                        if X <= 5.0:
                            return '(Up)'
                        else:
                            return '(Down)'
            else:
                if Y <= 9.0:
                    if X <= 3.0:
                        if X <= 1.0:
                            return '(Right)'
                        else:
                            return '(Down)'
                    else:
                        if X <= 4.0:
                            return '(Left)'
                        else:
                            return '(Right)'
                else:
                    return '(Down)'
        else:
            if X <= 9.0:
                if Y <= 8.0:
                    if X <= 7.0:
                        if Y <= 7.0:
                            return '(Down)'
                        else:
                            return '(Left)'
                    else:
                        if Y <= 7.0:
                            if X <= 8.0:
                                return '(Up)'
                            else:
                                return '(Down)'
                        else:
                            if X <= 8.0:
                                return '(Left)'
                            else:
                                return '(Right)'
                else:
                    if X <= 8.0:
                        return '(Down)'
                    else:
                        if Y <= 9.0:
                            return '(Left)'
                        else:
                            return '(Down)'
            else:
                if Y <= 8.0:
                    if Y <= 7.0:
                        return '(Down)'
                    else:
                        return '(Up)'
                else:
                    if Y <= 8.0:
                        return '(Left)'
                    else:
                        return '(Down)'
    else:
        if X <= 6.0:
            if Y <= 9.0:
                if X <= 6.0:
                    return '(Right)'
                else:
                    return '(Left)'
            else:
                if Y <= 11.0:
                    if X <= 0.0:
                        return '(Down)'
                    else:
                        return '(Right)'
                else:
                    return '(Left)'
        else:
            if X <= 10.0:
                return '(Left)'
            else:
                if X <= 10.0:
                    return '(Left)'
                else:
                    if X <= 10.0:
                        return '(Left)'
                    else:
                        if X <= 10.0:
                            return '(Left)'
                        else:
                            if X <= 10.0:
                                return '(Left)'
                            else:
                                return '(Down)'
Optimal decision tree (depth=8) value: 0.30508202976655435
Writing result files...
