Solving...
Starting with fixed depth 5
Set parameter Username
Academic license - for non-commercial use only - expires 2025-09-20
Set parameter Threads to value 1
Set parameter TimeLimit to value 1200
Gurobi Optimizer version 10.0.0 build v10.0.0rc2 (linux64)

CPU model: AMD EPYC 9124 16-Core Processor, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 32 physical cores, 64 logical processors, using up to 1 threads

Optimize a model with 70419 rows, 21181 columns and 725649 nonzeros
Model fingerprint: 0x44eeb88a
Variable types: 1599 continuous, 19582 integer (19582 binary)
Coefficient statistics:
  Matrix range     [5e-04, 1e+02]
  Objective range  [1e+00, 2e+00]
  Bounds range     [1e+00, 1e+02]
  RHS range        [1e+00, 5e+00]
Presolve removed 156 rows and 187 columns
Presolve time: 2.40s
Presolved: 70263 rows, 20994 columns, 572626 nonzeros
Variable types: 1599 continuous, 19395 integer (19395 binary)
Found heuristic solution: objective -11.7322420
Root relaxation presolved: 70263 rows, 20994 columns, 572626 nonzeros


Root relaxation: objective -2.173209e+00, 7518 iterations, 1.54 seconds (5.39 work units)
Total elapsed time = 5.57s

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   -2.17321    0  719  -11.73224   -2.17321  81.5%     -    5s
H    0     0                      -4.1221081   -2.17321  47.3%     -    6s
     0     0   -2.17321    0 1780   -4.12211   -2.17321  47.3%     -    6s
     0     0   -2.17321    0 1780   -4.12211   -2.17321  47.3%     -    7s
     0     0   -2.17321    0  972   -4.12211   -2.17321  47.3%     -    9s
     0     0   -2.17321    0  669   -4.12211   -2.17321  47.3%     -    9s
     0     0   -2.17321    0  551   -4.12211   -2.17321  47.3%     -   12s
     0     0   -2.17321    0  547   -4.12211   -2.17321  47.3%     -   13s
     0     0   -2.17321    0  653   -4.12211   -2.17321  47.3%     -   17s
     0     0   -2.17321    0  655   -4.12211   -2.17321  47.3%     -   17s
     0     0   -2.17321    0  597   -4.12211   -2.17321  47.3%     -   20s
     0     0   -2.17321    0 1201   -4.12211   -2.17321  47.3%     -   21s
     0     0   -2.17321    0  222   -4.12211   -2.17321  47.3%     -   24s
     0     0   -2.17321    0  234   -4.12211   -2.17321  47.3%     -   25s
     0     0   -2.17321    0  391   -4.12211   -2.17321  47.3%     -   26s
     0     0   -2.17321    0  406   -4.12211   -2.17321  47.3%     -   27s
     0     0   -2.17321    0  398   -4.12211   -2.17321  47.3%     -   30s
     0     0   -2.17321    0  395   -4.12211   -2.17321  47.3%     -   32s
H    0     0                      -3.3340226   -2.17321  34.8%     -   33s
     0     2   -2.17321    0  395   -3.33402   -2.17321  34.8%     -   38s
     5     7   -2.17321    3 1623   -3.33402   -2.17321  34.8%   896   40s
    17    19   -2.17321   10  556   -3.33402   -2.17321  34.8%   889   45s
    41    42   -2.18189   24 1352   -3.33402   -2.17321  34.8%   649   50s
H   54    49                      -2.9407593   -2.17321  26.1%   560   54s
    54    50   -2.26843   35 1238   -2.94076   -2.17321  26.1%   560   56s
    56    51   -2.32420   37  604   -2.94076   -2.17321  26.1%   544   61s
*   59    48              39      -2.3954303   -2.17321  9.28%   520   61s
    73    60   -2.18458   10 2802   -2.39543   -2.17321  9.28%   507   65s
    99    86   -2.18458   25 1808   -2.39543   -2.17321  9.28%   590   70s
   123   109   -2.18458   42  609   -2.39543   -2.17321  9.28%   521   75s
   140   122   -2.18458   52  466   -2.39543   -2.17321  9.28%   494   80s
*  157   127              68      -2.3741026   -2.17321  8.46%   447   84s
   159   126   -2.30952   68  509   -2.37410   -2.17321  8.46%   442   85s
   183   148   -2.17321   19  978   -2.37410   -2.17321  8.46%   446   90s
   189   154   -2.17321   23  479   -2.37410   -2.17321  8.46%   463   95s
   216   177   -2.17380   41 2290   -2.37410   -2.17321  8.46%   461  100s
   247   195   -2.17321    7 1438   -2.37410   -2.17321  8.46%   430  105s
   271   219   -2.17321   20  419   -2.37410   -2.17321  8.46%   455  110s
   314   257   -2.17321   49  845   -2.37410   -2.17321  8.46%   417  115s
   339   270   -2.17321   11  543   -2.37410   -2.17321  8.46%   413  120s
   356   287   -2.17321   20  537   -2.37410   -2.17321  8.46%   442  125s
   374   305   -2.17321   30  567   -2.37410   -2.17321  8.46%   449  131s
H  378   307                      -2.3493178   -2.17321  7.50%   444  131s
H  405   328                      -2.3234161   -2.17321  6.46%   430  135s
H  443   351                      -2.3125541   -2.17321  6.03%   408  139s
   444   354   -2.17321   23 1478   -2.31255   -2.17321  6.03%   408  140s
H  486   394                      -2.2851621   -2.17321  4.90%   390  144s
   493   395   -2.26780   66 1533   -2.28516   -2.17321  4.90%   386  145s
   511   402   -2.19239   55  395   -2.28516   -2.17321  4.90%   376  152s
   513   403   -2.18215    7  857   -2.28516   -2.17321  4.90%   375  169s
   514   404   -2.17321   16  691   -2.28516   -2.17321  4.90%   374  180s
   516   405   -2.17321   21  625   -2.28516   -2.17321  4.90%   373  190s
   518   407   -2.17321   37  580   -2.28516   -2.17321  4.90%   371  196s
   520   408   -2.17321   58  603   -2.28516   -2.17321  4.90%   370  205s
   522   409   -2.17321   22  273   -2.28516   -2.17321  4.90%   369  218s
   523   410   -2.17321    7  181   -2.28516   -2.17321  4.90%   368  224s
   524   411   -2.17785   16  189   -2.28516   -2.17321  4.90%   367  232s
   526   412   -2.17321   29  461   -2.28516   -2.17321  4.90%   366  238s
   528   413   -2.17321   34  376   -2.28516   -2.17321  4.90%   364  246s
   530   415   -2.21688   52  396   -2.28516   -2.17321  4.90%   363  257s
   531   415   -2.18458    5  386   -2.28516   -2.17321  4.90%   362  273s
   532   416   -2.21974   45  386   -2.28516   -2.17321  4.90%   362  278s
H  532   394                      -2.2567056   -2.17321  3.70%   590  284s
   533   397   -2.17321   10  415   -2.25671   -2.17321  3.70%   594  285s
   551   409   -2.17321   19  848   -2.25671   -2.17321  3.70%   585  292s
   556   412   -2.17321   21 1155   -2.25671   -2.17321  3.70%   586  295s
   565   418   -2.17337   26 1377   -2.25671   -2.17321  3.70%   578  300s
   571   422   -2.17321   29 1055   -2.25671   -2.17321  3.70%   577  305s
   577   426   -2.17321   32 1063   -2.25671   -2.17321  3.70%   581  310s
   591   435   -2.17321   39  772   -2.25671   -2.17321  3.70%   573  316s
   606   445   -2.17321   46 1213   -2.25671   -2.17321  3.70%   565  320s
   618   452   -2.17321   52  549   -2.25671   -2.17321  3.70%   560  325s
   642   461   -2.19438   65 1855   -2.25671   -2.17321  3.70%   545  330s
   662   473   -2.18593   75  850   -2.25671   -2.17321  3.70%   533  335s
   688   486   -2.18593   88 1819   -2.25671   -2.17321  3.70%   518  340s
   707   490   -2.17321   15 2161   -2.25671   -2.17321  3.70%   507  349s
   709   491   -2.17321   16 2114   -2.25671   -2.17321  3.70%   506  350s
   717   496   -2.17321   20  448   -2.25671   -2.17321  3.70%   509  355s
   735   508   -2.17321   29  610   -2.25671   -2.17321  3.70%   505  362s
   737   510   -2.17321   30  639   -2.25671   -2.17321  3.70%   509  365s
H  740   483                      -2.2052715   -2.17321  1.45%   508  365s
   755   495   -2.17321   39  626   -2.20527   -2.17321  1.45%   505  370s
   772   504   -2.18873   47 2712   -2.20527   -2.17321  1.45%   496  375s
   785   506   -2.18989   54 2633   -2.20527   -2.17321  1.45%   491  380s
   809   516   -2.19430   67  488   -2.20527   -2.17321  1.45%   480  385s
   832   521   -2.17321   19  624   -2.20527   -2.17321  1.45%   474  392s
   833   522   -2.17321   19  622   -2.20527   -2.17321  1.45%   478  395s
   847   529   -2.18240   26 1040   -2.20527   -2.17321  1.45%   471  400s
   857   536   -2.17321   31 1184   -2.20527   -2.17321  1.45%   473  405s
   872   546   -2.17321   39 1008   -2.20527   -2.17321  1.45%   476  412s
   885   548   -2.17948   46 1856   -2.20527   -2.17321  1.45%   473  415s
   904   560   -2.17948   56 1915   -2.20527   -2.17321  1.45%   465  420s
   926   568   -2.17948   65 2618   -2.20527   -2.17321  1.45%   457  425s
   950   578   -2.17948   78 1177   -2.20527   -2.17321  1.45%   448  430s
*  969   378              88      -2.1794848   -2.17321  0.29%   441  432s
H  975   354                      -2.1794848   -2.17321  0.29%   439  433s
   982   357 infeasible   20        -2.17948   -2.17321  0.29%   436  435s
H 1001   343                      -2.1794847   -2.17321  0.29%   433  439s
  1002   345   -2.17779   27  520   -2.17948   -2.17321  0.29%   433  440s
H 1020   141                      -2.1732086   -2.17321  0.00%   429  443s

Cutting planes:
  Lift-and-project: 44
  Implied bound: 6
  Flow cover: 282
  Zero half: 110

Explored 1021 nodes (480797 simplex iterations) in 443.17 seconds (1622.09 work units)
Thread count was 1 (of 64 available processors)

Solution count 10: -2.17321 -2.17948 -2.17948 ... -2.34932
No other solutions better than -2.17321

Optimal solution found (tolerance 1.00e-04)
Best objective -2.173208593160e+00, best bound -2.173208593160e+00, gap 0.0000%
Tree policy:
if dealer_total <= 9.0:
    if dealer_total <= 6.0:
        if player_total <= 11.0:
            if dealer_total <= 0.0:
                return '(Skip)'
            else:
                return '(Draw)'
        else:
            return '(Skip)'
    else:
        if player_total <= 14.0:
            return '(Draw)'
        else:
            return '(Skip)'
else:
    if player_total <= 13.0:
        if dealer_total <= 10.0:
            return '(Draw)'
        else:
            if dealer_total <= 10.0:
                return '(Skip)'
            else:
                if player_total <= 11.0:
                    return '(Draw)'
                else:
                    return '(Skip)'
    else:
        if player_total <= 19.0:
            if skipped <= 0.0:
                return '(Skip)'
            else:
                if dealer_total <= 10.0:
                    return '(Draw)'
                else:
                    return '(Skip)'
        else:
            return '(Skip)'
Optimal decision tree (depth=5) value: -2.173208593159629
Writing result files...
