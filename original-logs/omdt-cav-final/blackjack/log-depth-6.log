Solving...
Starting with fixed depth 6
Set parameter Username
Academic license - for non-commercial use only - expires 2025-09-20
Set parameter Threads to value 1
Set parameter TimeLimit to value 1200
Gurobi Optimizer version 10.0.0 build v10.0.0rc2 (linux64)

CPU model: AMD EPYC 9124 16-Core Processor, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 32 physical cores, 64 logical processors, using up to 1 threads

Optimize a model with 138707 rows, 39741 columns and 1545201 nonzeros
Model fingerprint: 0x95d49d09
Variable types: 1599 continuous, 38142 integer (38142 binary)
Coefficient statistics:
  Matrix range     [5e-04, 1e+02]
  Objective range  [1e+00, 2e+00]
  Bounds range     [1e+00, 1e+02]
  RHS range        [1e+00, 6e+00]
Presolve removed 316 rows and 379 columns (presolve time = 5s) ...
Presolve removed 316 rows and 379 columns
Presolve time: 5.59s
Presolved: 138391 rows, 39362 columns, 1236050 nonzeros
Variable types: 1599 continuous, 37763 integer (37763 binary)
Found heuristic solution: objective -11.7322420
Root relaxation presolved: 39362 rows, 177753 columns, 1275412 nonzeros


Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0065713e+03   0.000000e+00   1.883907e+03      8s
   38450   -2.1828297e+00   0.000000e+00   5.488841e+05     10s
   40450   -2.2024516e+00   0.000000e+00   5.404714e+04     15s
   42580   -2.2166401e+00   0.000000e+00   1.772615e+05     20s
   44860   -2.2305921e+00   0.000000e+00   1.470777e+05     25s
   47252   -2.1732086e+00   0.000000e+00   0.000000e+00     29s
   47252   -2.1732086e+00   0.000000e+00   0.000000e+00     29s

Root relaxation: objective -2.173209e+00, 47252 iterations, 22.29 seconds (49.88 work units)
Total elapsed time = 54.60s
Total elapsed time = 56.33s

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   -2.17321    0 1102  -11.73224   -2.17321  81.5%     -   58s
     0     0   -2.17321    0 1901  -11.73224   -2.17321  81.5%     -   60s
     0     0   -2.17321    0 1901  -11.73224   -2.17321  81.5%     -   61s
     0     0   -2.17321    0  293  -11.73224   -2.17321  81.5%     -   77s
H    0     0                      -2.2052715   -2.17321  1.45%     -   78s
     0     0   -2.17321    0  542   -2.20527   -2.17321  1.45%     -   78s
     0     0   -2.17321    0   63   -2.20527   -2.17321  1.45%     -   91s
     0     0   -2.17321    0  661   -2.20527   -2.17321  1.45%     -   93s
     0     0   -2.17321    0  141   -2.20527   -2.17321  1.45%     -   96s
     0     0   -2.17321    0  141   -2.20527   -2.17321  1.45%     -   97s
     0     0   -2.17321    0  137   -2.20527   -2.17321  1.45%     -  100s
     0     0   -2.17321    0  137   -2.20527   -2.17321  1.45%     -  100s
     0     0   -2.17321    0  374   -2.20527   -2.17321  1.45%     -  105s
     0     0   -2.17321    0  136   -2.20527   -2.17321  1.45%     -  110s
H    0     0                      -2.2052704   -2.17321  1.45%     -  110s
     0     0   -2.17321    0  195   -2.20527   -2.17321  1.45%     -  117s
     0     0   -2.17321    0  195   -2.20527   -2.17321  1.45%     -  122s
H    0     0                      -2.2052698   -2.17321  1.45%     -  129s
     0     2   -2.17321    0  192   -2.20527   -2.17321  1.45%     -  145s
     3     5   -2.17321    3  946   -2.20527   -2.17321  1.45%   996  154s
     7     9   -2.17321    5  787   -2.20527   -2.17321  1.45%   447  155s
    16    18   -2.17321   10  221   -2.20527   -2.17321  1.45%   453  166s
    24    26   -2.17321   15 1095   -2.20527   -2.17321  1.45%   353  170s
    33    35   -2.17321   20  300   -2.20527   -2.17321  1.45%   350  179s
    35    37   -2.17321   22 1824   -2.20527   -2.17321  1.45%   337  180s
    51    48   -2.17321   30  374   -2.20527   -2.17321  1.45%   299  185s
    61    52   -2.19410   38 1936   -2.20527   -2.17321  1.45%   276  190s
    67    55   -2.17321    4 1669   -2.20527   -2.17321  1.45%   265  195s
    77    65   -2.17321   10  211   -2.20527   -2.17321  1.45%   264  202s
    84    71   -2.17321   14  344   -2.20527   -2.17321  1.45%   255  205s
    95    76   -2.17321   21  341   -2.20527   -2.17321  1.45%   242  215s
H  108    77                      -2.1859343   -2.17321  0.58%   219  219s
   109    78   -2.17321   30  335   -2.18593   -2.17321  0.58%   217  220s
   120    84   -2.17321   10  420   -2.18593   -2.17321  0.58%   218  225s
   135    99   -2.17321   20  343   -2.18593   -2.17321  0.58%   215  233s
   139   103   -2.17321   22 1183   -2.18593   -2.17321  0.58%   213  235s
   161   112   -2.17321   39 2483   -2.18593   -2.17321  0.58%   193  240s
   177   128   -2.17321   50  299   -2.18593   -2.17321  0.58%   193  245s
   194   143   -2.17321   61  689   -2.18593   -2.17321  0.58%   184  250s
   203   149   -2.17321   66  307   -2.18593   -2.17321  0.58%   177  255s
   219   152   -2.17321   80  462   -2.18593   -2.17321  0.58%   172  260s
   221   152   -2.17321   10  245   -2.18593   -2.17321  0.58%   192  270s
   239   170   -2.17321   19 1410   -2.18593   -2.17321  0.58%   181  275s
   240   171   -2.17321   20  349   -2.18593   -2.17321  0.58%   214  288s
   243   174   -2.17321   22  747   -2.18593   -2.17321  0.58%   213  290s
   260   190   -2.17321   26 1634   -2.18593   -2.17321  0.58%   206  295s
   266   195   -2.17321   30  545   -2.18593   -2.17321  0.58%   224  302s
   267   196   -2.17321   30  215   -2.18593   -2.17321  0.58%   233  306s
   276   202   -2.17321   32 2650   -2.18593   -2.17321  0.58%   228  310s
   282   207   -2.17321   36 3571   -2.18593   -2.17321  0.58%   226  319s
   286   211   -2.17321   38 1386   -2.18593   -2.17321  0.58%   223  320s
   294   219   -2.17321   40  516   -2.18593   -2.17321  0.58%   234  325s
   298   221   -2.17321   43  546   -2.18593   -2.17321  0.58%   233  331s
   303   221   -2.17321   44 1070   -2.18593   -2.17321  0.58%   236  335s
   316   225   -2.17321   53  627   -2.18593   -2.17321  0.58%   241  345s
   325   228   -2.17321   61  954   -2.18593   -2.17321  0.58%   238  350s
   332   231   -2.17388   66  712   -2.18593   -2.17321  0.58%   240  356s
   336   230   -2.17321   10  251   -2.18593   -2.17321  0.58%   255  367s
   347   241   -2.17321   20  217   -2.18593   -2.17321  0.58%   256  373s
   350   244   -2.17321   22  979   -2.18593   -2.17321  0.58%   256  375s
   368   261   -2.17321   30 1220   -2.18593   -2.17321  0.58%   260  384s
   370   262   -2.17321   30  275   -2.18593   -2.17321  0.58%   267  389s
   373   265   -2.17321   32 1256   -2.18593   -2.17321  0.58%   265  390s
   389   280   -2.17321   40  520   -2.18593   -2.17321  0.58%   265  395s
   407   297   -2.17321   57  877   -2.18593   -2.17321  0.58%   259  400s
   422   308   -2.17321   68  689   -2.18593   -2.17321  0.58%   258  412s
   429   307   -2.17321    9 1870   -2.18593   -2.17321  0.58%   256  415s
   432   309   -2.17321   11  420   -2.18593   -2.17321  0.58%   261  420s
   458   333   -2.18279   23 1613   -2.18593   -2.17321  0.58%   249  425s
   485   358   -2.18279   38 3740   -2.18593   -2.17321  0.58%   237  430s
   506   378   -2.18279   46 2937   -2.18593   -2.17321  0.58%   229  435s
   511   382   -2.17965    8  195   -2.18593   -2.17321  0.58%   227  444s
   513   383   -2.17321   14  726   -2.18593   -2.17321  0.58%   226  530s
   514   384   -2.17321   45  956   -2.18593   -2.17321  0.58%   225  582s
   516   385   -2.17321   18  553   -2.18593   -2.17321  0.58%   225  623s
   517   386   -2.17321   45  900   -2.18593   -2.17321  0.58%   224  625s
   518   387   -2.18279   49  523   -2.18593   -2.17321  0.58%   224  662s
   520   388   -2.17321   26  938   -2.18593   -2.17321  0.58%   223  696s
   522   389   -2.17909   23  569   -2.18593   -2.17321  0.58%   222  730s
   524   391   -2.18279   41  640   -2.18593   -2.17321  0.58%   221  757s
   526   392   -2.17909   13  585   -2.18593   -2.17321  0.58%   220  783s
   528   393   -2.17909   16  257   -2.18593   -2.17321  0.58%   219  807s
   530   395   -2.17321   58  402   -2.18593   -2.17321  0.58%   219  829s
   532   396   -2.18279   40  360   -2.18593   -2.17321  0.58%   218  843s
   533   397   -2.17321   50  358   -2.18593   -2.17321  0.58%   217  942s
   534   397   -2.18279   36  358   -2.18593   -2.17321  0.58%   217  950s
   535   400   -2.17321   10  506   -2.18593   -2.17321  0.58%   570  960s
   544   406   -2.17321   14  885   -2.18593   -2.17321  0.58%   563  965s
   553   412   -2.17321   19  368   -2.18593   -2.17321  0.58%   561  973s
   554   413   -2.17321   19  368   -2.18593   -2.17321  0.58%   565  979s
   555   413   -2.17321   20  366   -2.18593   -2.17321  0.58%   564  980s
   564   419   -2.17321   24 1918   -2.18593   -2.17321  0.58%   558 1004s
   566   421   -2.17321   25 1316   -2.18593   -2.17321  0.58%   556 1005s
   573   425   -2.17321   29  468   -2.18593   -2.17321  0.58%   556 1015s
   574   426   -2.17321   29  377   -2.18593   -2.17321  0.58%   561 1020s
   582   431   -2.17690   33  499   -2.18593   -2.17321  0.58%   554 1025s
   593   439   -2.17321   39  632   -2.18593   -2.17321  0.58%   548 1032s
   594   439   -2.17321   39  632   -2.18593   -2.17321  0.58%   550 1035s
   612   442   -2.17453   49  392   -2.18593   -2.17321  0.58%   536 1040s
   632   446   -2.18593   60  940   -2.18593   -2.17321  0.58%   522 1045s
   642   452   -2.18593   65  160   -2.18593   -2.17321  0.58%   514 1051s
   644   454   -2.18593   66  399   -2.18593   -2.17321  0.58%   513 1056s
   646   455   -2.18593   67  970   -2.18593   -2.17321  0.58%   511 1060s
   648   456   -2.18593   68 1032   -2.18593   -2.17321  0.58%   510 1065s
*  686   401              87      -2.1859342   -2.17321  0.58%   482 1069s
   694   392   -2.17321   11 1031   -2.18593   -2.17321  0.58%   477 1070s
H  698   374                      -2.1859342   -2.17321  0.58%   475 1071s
   709   383   -2.17321   19  232   -2.18593   -2.17321  0.58%   471 1075s
   717   388   -2.17321   23 1279   -2.18593   -2.17321  0.58%   470 1080s
H  725   374                      -2.1859341   -2.17321  0.58%   466 1083s
   729   378   -2.17321   29  406   -2.18593   -2.17321  0.58%   465 1085s
   742   386   -2.17321   35 1117   -2.18593   -2.17321  0.58%   461 1090s
   755   394   -2.17321   42  994   -2.18593   -2.17321  0.58%   457 1095s
H  773   375                      -2.1859340   -2.17321  0.58%   447 1097s
H  779   360                      -2.1827927   -2.17321  0.44%   444 1099s
   779   362   -2.17321   22 1144   -2.18279   -2.17321  0.44%   444 1100s
H  800   355                      -2.1827927   -2.17321  0.44%   436 1104s
   801   357   -2.17321   33 1844   -2.18279   -2.17321  0.44%   436 1105s
H  806   189                      -2.1732086   -2.17321  0.00%   433 1106s

Cutting planes:
  Gomory: 1
  Lift-and-project: 32
  Implied bound: 2
  MIR: 25
  Flow cover: 146
  Zero half: 10

Explored 807 nodes (432321 simplex iterations) in 1106.64 seconds (4851.20 work units)
Thread count was 1 (of 64 available processors)

Solution count 10: -2.17321 -2.18279 -2.18279 ... -2.20527
No other solutions better than -2.17321

Optimal solution found (tolerance 1.00e-04)
Best objective -2.173208593160e+00, best bound -2.173208593160e+00, gap 0.0000%
Tree policy:
if skipped <= 0.0:
    if player_total <= 13.0:
        if dealer_total <= 22.0:
            if dealer_total <= 10.0:
                if dealer_total <= 6.0:
                    if player_total <= 11.0:
                        return '(Draw)'
                    else:
                        return '(Skip)'
                else:
                    return '(Draw)'
            else:
                if player_total <= 11.0:
                    if dealer_total <= 19.0:
                        return '(Draw)'
                    else:
                        return '(Skip)'
                else:
                    return '(Skip)'
        else:
            return '(Skip)'
    else:
        if player_total <= 17.0:
            if dealer_total <= 9.0:
                if player_total <= 14.0:
                    if dealer_total <= 6.0:
                        return '(Skip)'
                    else:
                        return '(Draw)'
                else:
                    return '(Skip)'
            else:
                return '(Skip)'
        else:
            if player_total <= 13.0:
                if dealer_total <= 22.0:
                    return '__random__'
                else:
                    return '(Skip)'
            else:
                return '(Skip)'
else:
    if dealer_total <= 21.0:
        return '(Skip)'
    else:
        if player_total <= 11.0:
            if dealer_total <= 22.0:
                return '(Skip)'
            else:
                if dealer_total <= 22.0:
                    return '__random__'
                else:
                    return '(Skip)'
        else:
            if dealer_total <= 22.0:
                if player_total <= 11.0:
                    return '(Skip)'
                else:
                    if player_total <= 14.0:
                        return '(Draw)'
                    else:
                        return '__random__'
            else:
                return '(Skip)'
Optimal decision tree (depth=6) value: -2.1732085931596217
Writing result files...
