Solving...
Starting with fixed depth 8
Set parameter Username
Academic license - for non-commercial use only - expires 2025-09-20
Set parameter Threads to value 1
Set parameter TimeLimit to value 1200
Gurobi Optimizer version 10.0.0 build v10.0.0rc2 (linux64)

CPU model: AMD EPYC 9124 16-Core Processor, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 32 physical cores, 64 logical processors, using up to 1 threads

Optimize a model with 548435 rows, 151101 columns and 6974193 nonzeros
Model fingerprint: 0x1bc7d01e
Variable types: 1599 continuous, 149502 integer (149502 binary)
Coefficient statistics:
  Matrix range     [5e-04, 1e+02]
  Objective range  [1e+00, 2e+00]
  Bounds range     [1e+00, 1e+02]
  RHS range        [1e+00, 8e+00]
Presolve removed 1020 rows and 1275 columns (presolve time = 5s) ...
Presolve removed 1020 rows and 1275 columns (presolve time = 10s) ...
Presolve removed 1276 rows and 1531 columns (presolve time = 15s) ...
Presolve removed 1276 rows and 1531 columns (presolve time = 20s) ...
Presolve removed 1276 rows and 1531 columns (presolve time = 25s) ...
Presolve removed 1276 rows and 1531 columns
Presolve time: 29.92s
Presolved: 547159 rows, 149570 columns, 5727314 nonzeros
Variable types: 1599 continuous, 147971 integer (147971 binary)
Found heuristic solution: objective -11.7322420
Root relaxation presolved: 149570 rows, 696729 columns, 5876884 nonzeros


Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0065713e+03   0.000000e+00   1.883907e+03     37s
  138006    3.0253274e+00   0.000000e+00   1.629360e+07     40s
  139036   -1.3335755e+00   0.000000e+00   2.069122e+07     46s
  139666   -1.9652315e+00   0.000000e+00   6.361174e+06     50s
  140266   -2.0588673e+00   0.000000e+00   7.202691e+05     55s
  141006   -2.1843809e+00   0.000000e+00   4.612681e+09     61s
  141626   -2.2181326e+00   0.000000e+00   3.498162e+06     66s
  142106   -2.2240048e+00   0.000000e+00   1.033027e+06     71s
  142716   -2.2564920e+00   0.000000e+00   4.903860e+05     76s
  143186   -2.2633201e+00   0.000000e+00   2.696855e+06     80s
  143826   -2.2700816e+00   0.000000e+00   3.954900e+06     86s
  144286   -2.2739935e+00   0.000000e+00   1.625013e+06     90s
  144916   -2.2795379e+00   0.000000e+00   4.546448e+06     96s
  145486   -2.2842400e+00   0.000000e+00   2.475684e+06    101s
  145906   -2.2871465e+00   0.000000e+00   2.103350e+06    105s
  146466   -2.2925250e+00   0.000000e+00   1.845114e+06    110s
  147026   -2.2973750e+00   0.000000e+00   3.643166e+06    115s
  147606   -2.3007225e+00   0.000000e+00   1.935658e+06    122s
  148046   -2.3041827e+00   0.000000e+00   1.947621e+06    126s
  148636   -2.3087668e+00   0.000000e+00   7.201231e+05    131s
  149056   -2.3113877e+00   0.000000e+00   1.979142e+06    135s
  149616   -2.3158781e+00   0.000000e+00   1.479077e+06    141s
  150176   -2.3194153e+00   0.000000e+00   4.334919e+05    146s
  150736   -2.3236262e+00   0.000000e+00   1.821416e+06    151s
  151156   -2.3276842e+00   0.000000e+00   6.330512e+06    155s
  151716   -2.3312339e+00   0.000000e+00   2.987355e+05    161s
  152256   -2.3350145e+00   0.000000e+00   5.388267e+05    166s
  152666   -2.3376935e+00   0.000000e+00   7.821195e+05    170s
  153186   -2.3409937e+00   0.000000e+00   6.495083e+06    176s
  153716   -2.3452278e+00   0.000000e+00   3.078799e+06    181s
  154246   -2.3476902e+00   0.000000e+00   2.310382e+06    186s
  154646   -2.3501093e+00   0.000000e+00   1.301210e+06    190s
  155166   -2.3529375e+00   0.000000e+00   1.905067e+05    196s
  155686   -2.3565205e+00   0.000000e+00   1.201761e+06    201s
  156206   -2.3591157e+00   0.000000e+00   1.497819e+06    206s
  156596   -2.3610033e+00   0.000000e+00   1.116022e+06    211s
  157116   -2.3643442e+00   0.000000e+00   1.060377e+06    216s
  157506   -2.3662385e+00   0.000000e+00   7.797556e+05    220s
  158026   -2.3688001e+00   0.000000e+00   2.905982e+05    226s
  158556   -2.3712566e+00   0.000000e+00   5.819933e+06    231s
  159086   -2.3743108e+00   0.000000e+00   1.799875e+06    236s
  159496   -2.3761712e+00   0.000000e+00   6.541011e+05    240s
  160026   -2.3788664e+00   0.000000e+00   2.065509e+06    245s
  160576   -2.3835384e+00   0.000000e+00   5.481128e+05    251s
  161136   -2.3877259e+00   0.000000e+00   4.387445e+05    256s
  161536   -2.3895738e+00   0.000000e+00   4.488627e+05    260s
  162096   -2.3930601e+00   0.000000e+00   2.223834e+06    265s
  162656   -2.3956197e+00   0.000000e+00   1.729994e+06    271s
  163206   -2.3975412e+00   0.000000e+00   1.114359e+05    276s
  163766   -2.4006153e+00   0.000000e+00   1.823826e+05    281s
  164186   -2.4029236e+00   0.000000e+00   2.593377e+05    286s
  164756   -2.4059241e+00   0.000000e+00   4.307956e+05    291s
  165186   -2.4080678e+00   0.000000e+00   1.180254e+06    295s
  165756   -2.4110774e+00   0.000000e+00   4.207355e+06    301s
  166356   -2.4149656e+00   0.000000e+00   4.847764e+05    306s
  166776   -2.4173513e+00   0.000000e+00   3.752337e+05    310s
  167356   -2.4206418e+00   0.000000e+00   2.053789e+05    315s
  167956   -2.4235301e+00   0.000000e+00   5.353958e+04    321s
  168586   -2.4268826e+00   0.000000e+00   7.439708e+05    326s
  169236   -2.4301599e+00   0.000000e+00   1.023211e+05    331s
  169776   -2.4332177e+00   0.000000e+00   7.380523e+05    335s
  170646   -2.4389829e+00   0.000000e+00   8.826668e+03    341s
  171235   -2.1732086e+00   0.000000e+00   0.000000e+00    344s
  171235   -2.1732086e+00   0.000000e+00   0.000000e+00    344s

Root relaxation: objective -2.173209e+00, 171235 iterations, 309.47 seconds (724.76 work units)
Total elapsed time = 453.80s
Total elapsed time = 456.28s

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   -2.17321    0  505  -11.73224   -2.17321  81.5%     -  465s
H    0     0                      -2.9311781   -2.17321  25.9%     -  466s
     0     0   -2.17321    0 2468   -2.93118   -2.17321  25.9%     -  471s
H    0     0                      -2.9217730   -2.17321  25.6%     -  472s
H    0     0                      -2.2621521   -2.17321  3.93%     -  473s
     0     0   -2.17321    0 3205   -2.26215   -2.17321  3.93%     -  474s
     0     0   -2.17321    0  292   -2.26215   -2.17321  3.93%     -  562s
     0     0   -2.17321    0  787   -2.26215   -2.17321  3.93%     -  567s
     0     0   -2.17321    0  134   -2.26215   -2.17321  3.93%     -  589s
H    0     0                      -2.2621520   -2.17321  3.93%     -  593s
     0     0   -2.17321    0  134   -2.26215   -2.17321  3.93%     -  594s
     0     0   -2.17321    0  126   -2.26215   -2.17321  3.93%     -  603s
     0     0   -2.17321    0  126   -2.26215   -2.17321  3.93%     -  615s
     0     0   -2.17321    0  123   -2.26215   -2.17321  3.93%     -  636s
     0     0   -2.17321    0  123   -2.26215   -2.17321  3.93%     -  640s
     0     0   -2.17321    0  144   -2.26215   -2.17321  3.93%     -  686s
H    0     0                      -2.2621520   -2.17321  3.93%     -  692s
     0     0   -2.17321    0  175   -2.26215   -2.17321  3.93%     -  693s
     0     0   -2.17321    0  162   -2.26215   -2.17321  3.93%     -  708s
     0     0   -2.17321    0  162   -2.26215   -2.17321  3.93%     -  727s
     0     2   -2.17321    0  162   -2.26215   -2.17321  3.93%     -  807s
     3     5   -2.17321    2 1432   -2.26215   -2.17321  3.93%   641  810s
     8    10   -2.17321    5 1524   -2.26215   -2.17321  3.93%   271  815s
    14    16   -2.17321    8 1740   -2.26215   -2.17321  3.93%   181  842s
    17    19   -2.17321   10  263   -2.26215   -2.17321  3.93%   351  866s
    20    22   -2.17321   12 2268   -2.26215   -2.17321  3.93%   318  870s
    26    28   -2.17321   15 2537   -2.26215   -2.17321  3.93%   261  875s
H   27    27                      -2.1859343   -2.17321  0.58%   251  877s
    30    32   -2.17321   18  969   -2.18593   -2.17321  0.58%   233  880s
    34    36   -2.17321   20  174   -2.18593   -2.17321  0.58%   303  903s
    35    37   -2.17321   21  530   -2.18593   -2.17321  0.58%   297  905s
    39    41   -2.17321   23  592   -2.18593   -2.17321  0.58%   277  910s
    43    45   -2.17321   25  623   -2.18593   -2.17321  0.58%   260  915s
    49    50   -2.17414   29 3615   -2.18593   -2.17321  0.58%   240  922s
    50    51   -2.17321   30  402   -2.18593   -2.17321  0.58%   259  928s
    52    52   -2.17321   32  386   -2.18593   -2.17321  0.58%   249  930s
    55    53   -2.17407   34 2986   -2.18593   -2.17321  0.58%   244  935s
    63    55   -2.17321    4 1085   -2.18593   -2.17321  0.58%   219  940s
    73    65   -2.17321   10  210   -2.18593   -2.17321  0.58%   235  959s
    74    66   -2.17321   11 1650   -2.18593   -2.17321  0.58%   235  960s
    81    73   -2.17321   15  826   -2.18593   -2.17321  0.58%   220  966s
    89    81   -2.17321   19 1509   -2.18593   -2.17321  0.58%   204  970s
    90    82   -2.17321   20  387   -2.18593   -2.17321  0.58%   220  978s
    92    84   -2.17321   21  268   -2.18593   -2.17321  0.58%   216  980s
   100    92   -2.17321   26 1605   -2.18593   -2.17321  0.58%   203  985s
   105    97   -2.17321   30  210   -2.18593   -2.17321  0.58%   206  992s
   108   100   -2.17321   32 3008   -2.18593   -2.17321  0.58%   204  996s
   114   106   -2.17321   35 1392   -2.18593   -2.17321  0.58%   194 1000s
   121   113   -2.17321   40  447   -2.18593   -2.17321  0.58%   201 1014s
   122   114   -2.17321   41 1283   -2.18593   -2.17321  0.58%   200 1015s
   131   123   -2.17321   47 1752   -2.18593   -2.17321  0.58%   191 1020s
   136   128   -2.17321   51  730   -2.18593   -2.17321  0.58%   192 1025s
   148   140   -2.17321   58 1758   -2.18593   -2.17321  0.58%   181 1030s
   153   145   -2.17321   61  390   -2.18593   -2.17321  0.58%   185 1035s
   162   153   -2.17321   66  306   -2.18593   -2.17321  0.58%   178 1041s
   167   157   -2.17321   70  278   -2.18593   -2.17321  0.58%   185 1047s
   170   160   -2.17321   72  418   -2.18593   -2.17321  0.58%   184 1050s
   177   165   -2.17337   77 1456   -2.18593   -2.17321  0.58%   180 1055s
   181   169   -2.17321   80  327   -2.18593   -2.17321  0.58%   188 1061s
   184   170   -2.17321   82  492   -2.18593   -2.17321  0.58%   190 1065s
   189   175   -2.17321   85  488   -2.18593   -2.17321  0.58%   187 1070s
   194   180   -2.17321   89  342   -2.18593   -2.17321  0.58%   186 1075s
   196   181   -2.17337   90  948   -2.18593   -2.17321  0.58%   192 1080s
   201   181   -2.17805   93  343   -2.18593   -2.17321  0.58%   192 1085s
   208   181   -2.17321    7  935   -2.18593   -2.17321  0.58%   186 1090s
   211   183   -2.17321   10  247   -2.18593   -2.17321  0.58%   197 1112s
   213   185   -2.17321   11  727   -2.18593   -2.17321  0.58%   197 1115s
   222   194   -2.17321   17  964   -2.18593   -2.17321  0.58%   190 1120s
   227   198   -2.17321   20  276   -2.18593   -2.17321  0.58%   194 1129s
   228   199   -2.17321   21 2169   -2.18593   -2.17321  0.58%   194 1130s
   233   204   -2.17321   24  755   -2.18593   -2.17321  0.58%   191 1135s
   238   209   -2.17321   27 1029   -2.18593   -2.17321  0.58%   188 1140s
   244   215   -2.17321   30  715   -2.18593   -2.17321  0.58%   192 1152s
   245   216   -2.17321   30 1591   -2.18593   -2.17321  0.58%   205 1163s
   250   221   -2.17321   33  793   -2.18593   -2.17321  0.58%   202 1165s
   259   228   -2.17321   39 2216   -2.18593   -2.17321  0.58%   196 1170s
   260   229   -2.17321   40  516   -2.18593   -2.17321  0.58%   213 1185s
   267   236   -2.17321   45 1258   -2.18593   -2.17321  0.58%   209 1190s
   270   238   -2.17321   46  979   -2.18593   -2.17321  0.58%   207 1195s
   274   239   -2.17321   49  538   -2.18593   -2.17321  0.58%   204 1200s

Cutting planes:
  Gomory: 10
  Lift-and-project: 5
  Implied bound: 6
  MIR: 68
  Flow cover: 10
  Zero half: 56

Explored 275 nodes (273096 simplex iterations) in 1200.06 seconds (5500.16 work units)
Thread count was 1 (of 64 available processors)

Solution count 7: -2.18593 -2.26215 -2.26215 ... -11.7322

Time limit reached
Best objective -2.185934250751e+00, best bound -2.173208593160e+00, gap 0.5822%
Tree policy:
if player_total <= 4.0:
    if player_total <= 4.0:
        if dealer_total <= 22.0:
            if dealer_total <= 11.0:
                return '(Draw)'
            else:
                return '__random__'
        else:
            return '(Skip)'
    else:
        if player_total <= 4.0:
            return '(Skip)'
        else:
            if dealer_total <= 3.0:
                return '(Skip)'
            else:
                if dealer_total <= 22.0:
                    return '__random__'
                else:
                    return '(Skip)'
else:
    if player_total <= 13.0:
        if dealer_total <= 0.0:
            if dealer_total <= 8.0:
                if dealer_total <= 0.0:
                    return '__random__'
                else:
                    if player_total <= 11.0:
                        return '(Skip)'
                    else:
                        return '__random__'
            else:
                return '(Skip)'
        else:
            if skipped <= 0.0:
                if dealer_total <= 10.0:
                    if player_total <= 11.0:
                        return '(Draw)'
                    else:
                        if dealer_total <= 6.0:
                            return '(Skip)'
                        else:
                            return '(Draw)'
                else:
                    if player_total <= 11.0:
                        if dealer_total <= 10.0:
                            return '(Skip)'
                        else:
                            if player_total <= 4.0:
                                return '(Skip)'
                            else:
                                return '(Draw)'
                    else:
                        return '(Skip)'
            else:
                if dealer_total <= 22.0:
                    if dealer_total <= 21.0:
                        if player_total <= 11.0:
                            return '__random__'
                        else:
                            if player_total <= 11.0:
                                return '(Skip)'
                            else:
                                return '__random__'
                    else:
                        if skipped <= 0.0:
                            return '(Skip)'
                        else:
                            return '__random__'
                else:
                    return '(Skip)'
    else:
        if dealer_total <= 22.0:
            if player_total <= 17.0:
                if dealer_total <= 13.0:
                    if skipped <= 0.0:
                        return '(Skip)'
                    else:
                        return '__random__'
                else:
                    if dealer_total <= 8.0:
                        return '(Skip)'
                    else:
                        return '__random__'
            else:
                if player_total <= 21.0:
                    if dealer_total <= 3.0:
                        return '(Skip)'
                    else:
                        if skipped <= 0.0:
                            return '(Skip)'
                        else:
                            return '__random__'
                else:
                    if player_total <= 19.0:
                        return '(Skip)'
                    else:
                        return '__random__'
        else:
            return '(Skip)'
Optimal decision tree (depth=8) value: -2.18593425075104
Writing result files...
