Solving...
Starting with fixed depth 7
Set parameter Username
Academic license - for non-commercial use only - expires 2025-09-20
Set parameter Threads to value 1
Set parameter TimeLimit to value 1200
Gurobi Optimizer version 10.0.0 build v10.0.0rc2 (linux64)

CPU model: AMD EPYC 9124 16-Core Processor, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 32 physical cores, 64 logical processors, using up to 1 threads

Optimize a model with 275283 rows, 76861 columns and 3286641 nonzeros
Model fingerprint: 0xf9173778
Variable types: 1599 continuous, 75262 integer (75262 binary)
Coefficient statistics:
  Matrix range     [5e-04, 1e+02]
  Objective range  [1e+00, 2e+00]
  Bounds range     [1e+00, 1e+02]
  RHS range        [1e+00, 7e+00]
Presolve removed 636 rows and 763 columns (presolve time = 5s) ...
Presolve removed 636 rows and 763 columns (presolve time = 10s) ...
Presolve removed 636 rows and 763 columns
Presolve time: 12.91s
Presolved: 274647 rows, 76098 columns, 2665042 nonzeros
Variable types: 1599 continuous, 74499 integer (74499 binary)
Found heuristic solution: objective -11.7322420
Root relaxation presolved: 76098 rows, 350745 columns, 2741140 nonzeros


Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0065713e+03   0.000000e+00   1.883907e+03     17s
   71355   -1.9503209e+00   0.000000e+00   4.303975e+06     20s
   72505   -2.1498021e+00   0.000000e+00   1.171624e+06     25s
   73695   -2.1877818e+00   0.000000e+00   1.240080e+06     31s
   74725   -2.1968175e+00   0.000000e+00   1.852883e+06     35s
   75725   -2.2040289e+00   0.000000e+00   4.537929e+05     40s
   76855   -2.2127602e+00   0.000000e+00   1.063623e+06     46s
   77815   -2.2197516e+00   0.000000e+00   5.193482e+05     50s
   78855   -2.2401778e+00   0.000000e+00   3.806879e+05     55s
   79895   -2.2472449e+00   0.000000e+00   1.793745e+06     60s
   80795   -2.2533424e+00   0.000000e+00   4.127120e+05     65s
   81775   -2.2598690e+00   0.000000e+00   1.198436e+06     70s
   82785   -2.2661371e+00   0.000000e+00   1.130002e+06     75s
   83805   -2.2716421e+00   0.000000e+00   3.204922e+05     80s
   84845   -2.2784120e+00   0.000000e+00   1.700855e+05     86s
   85755   -2.2842348e+00   0.000000e+00   1.925906e+05     90s
   86795   -2.2890338e+00   0.000000e+00   2.287081e+05     95s
   87835   -2.2936319e+00   0.000000e+00   9.058438e+05    100s
   88875   -2.2989458e+00   0.000000e+00   3.313768e+05    105s
   89915   -2.3054072e+00   0.000000e+00   8.496794e+04    110s
   91005   -2.3104059e+00   0.000000e+00   2.923473e+06    115s
   92145   -2.3175225e+00   0.000000e+00   1.915712e+05    121s
   93375   -2.3504647e+00   0.000000e+00   4.074803e+04    125s
   94948   -2.1732086e+00   0.000000e+00   0.000000e+00    130s
   94948   -2.1732086e+00   0.000000e+00   0.000000e+00    130s

Root relaxation: objective -2.173209e+00, 94948 iterations, 115.01 seconds (264.88 work units)
Total elapsed time = 169.91s
Total elapsed time = 175.84s

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   -2.17321    0  941  -11.73224   -2.17321  81.5%     -  178s
     0     0   -2.17321    0 2094  -11.73224   -2.17321  81.5%     -  182s
H    0     0                      -7.5541388   -2.17321  71.2%     -  183s
H    0     0                      -7.1158950   -2.17321  69.5%     -  185s
     0     0   -2.17321    0  486   -7.11590   -2.17321  69.5%     -  225s
     0     0   -2.17321    0  484   -7.11590   -2.17321  69.5%     -  228s
     0     0   -2.17321    0  639   -7.11590   -2.17321  69.5%     -  264s
H    0     0                      -3.4649938   -2.17321  37.3%     -  266s
     0     0   -2.17321    0  626   -3.46499   -2.17321  37.3%     -  267s
     0     0   -2.17321    0  621   -3.46499   -2.17321  37.3%     -  289s
     0     0   -2.17321    0  619   -3.46499   -2.17321  37.3%     -  291s
     0     0   -2.17321    0  588   -3.46499   -2.17321  37.3%     -  322s
H    0     0                      -3.2024185   -2.17321  32.1%     -  331s
     0     0   -2.17321    0  586   -3.20242   -2.17321  32.1%     -  331s
     0     0   -2.17321    0  595   -3.20242   -2.17321  32.1%     -  362s
     0     0   -2.17321    0  593   -3.20242   -2.17321  32.1%     -  364s
     0     0   -2.17321    0  658   -3.20242   -2.17321  32.1%     -  414s
     0     0   -2.17321    0  658   -3.20242   -2.17321  32.1%     -  438s
     0     2   -2.17321    0  658   -3.20242   -2.17321  32.1%     -  499s
     1     3   -2.17321    1  770   -3.20242   -2.17321  32.1%  5695  501s
     3     5   -2.17321    2 1059   -3.20242   -2.17321  32.1%  2051  505s
     6     8   -2.17321    3 2840   -3.20242   -2.17321  32.1%  1096  529s
     8    10   -2.17321    4 1160   -3.20242   -2.17321  32.1%   826  530s
    13    15   -2.17321    7 4765   -3.20242   -2.17321  32.1%   587  535s
    18    20   -2.17321   10  404   -3.20242   -2.17321  32.1%   767  556s
    24    26   -2.17321   14 2064   -3.20242   -2.17321  32.1%   605  560s
    27    29   -2.17321   15 1172   -3.20242   -2.17321  32.1%   540  565s
    35    37   -2.17321   20  443   -3.20242   -2.17321  32.1%   576  585s
    42    44   -2.17321   24 1548   -3.20242   -2.17321  32.1%   493  590s
    51    53   -2.17321   30  443   -3.20242   -2.17321  32.1%   519  610s
    57    59   -2.17321   33 1134   -3.20242   -2.17321  32.1%   480  615s
    66    68   -2.17321   38 3896   -3.20242   -2.17321  32.1%   428  620s
    68    70   -2.17321   40  831   -3.20242   -2.17321  32.1%   491  636s
    71    73   -2.17321   42  613   -3.20242   -2.17321  32.1%   478  640s
    81    83   -2.17321   48 2101   -3.20242   -2.17321  32.1%   431  645s
    92    94   -2.17321   54 3188   -3.20242   -2.17321  32.1%   384  651s
   102   104   -2.17321   60  741   -3.20242   -2.17321  32.1%   386  661s
   110   112   -2.17321   64 1022   -3.20242   -2.17321  32.1%   363  665s
   125   127   -2.17321   73 2257   -3.20242   -2.17321  32.1%   328  670s
   137   139   -2.17321   81  429   -3.20242   -2.17321  32.1%   307  675s
   143   145   -2.17321   87  589   -3.20242   -2.17321  32.1%   295  680s
   150   152   -2.17942   92 1307   -3.20242   -2.17321  32.1%   306  686s
   157   153   -3.04576   98  570   -3.20242   -2.17321  32.1%   297  691s
*  160   153             101      -3.0457569   -2.17321  28.6%   292  691s
   169   158   -2.17321    6 2575   -3.04576   -2.17321  28.6%   281  695s
   177   166   -2.17321   10  570   -3.04576   -2.17321  28.6%   299  711s
   185   174   -2.17321   16  940   -3.04576   -2.17321  28.6%   289  715s
   192   181   -2.17321   20  504   -3.04576   -2.17321  28.6%   301  728s
   196   185   -2.17321   22 1542   -3.04576   -2.17321  28.6%   297  730s
   201   190   -2.17321   26 2961   -3.04576   -2.17321  28.6%   299  735s
   207   196   -2.17321   30  528   -3.04576   -2.17321  28.6%   323  755s
   215   204   -2.17321   35 1611   -3.04576   -2.17321  28.6%   316  760s
H  217   204                      -3.0457562   -2.17321  28.6%   313  760s
   223   212   -2.17321   40  520   -3.04576   -2.17321  28.6%   323  771s
   230   219   -2.17321   44 3374   -3.04576   -2.17321  28.6%   316  775s
   240   229   -2.17321   50  605   -3.04576   -2.17321  28.6%   324  789s
   242   231   -2.17321   52 1098   -3.04576   -2.17321  28.6%   322  790s
H  244   231                      -3.0002306   -2.17321  27.6%   320  791s
   252   241   -2.17321   60  636   -3.00023   -2.17321  27.6%   327  804s
   253   242   -2.17321   60  603   -3.00023   -2.17321  27.6%   342  812s
   258   247   -2.17321   63 1573   -3.00023   -2.17321  27.6%   337  815s
H  271   255                      -2.3526163   -2.17321  7.63%   321  820s
   280   266   -2.19513   82 1340   -2.35262   -2.17321  7.63%   313  825s
   289   275   -2.19513   87 1737   -2.35262   -2.17321  7.63%   304  830s
   300   286   -2.19513   94 1757   -2.35262   -2.17321  7.63%   294  848s
   304   288 infeasible   97        -2.35262   -2.17321  7.63%   294  850s
   312   292   -2.19513  103 2624   -2.35262   -2.17321  7.63%   289  855s
   325   304   -2.19513  114 2046   -2.35262   -2.17321  7.63%   277  862s
   332   311   -2.19513  120 2457   -2.35262   -2.17321  7.63%   272  865s
   341   320   -2.19513  129 1525   -2.35262   -2.17321  7.63%   265  870s
   348   326   -2.21748  135 1877   -2.35262   -2.17321  7.63%   265  875s
   352   330   -2.19513  139 1412   -2.35262   -2.17321  7.63%   262  883s
   355   333   -2.19513  142 1500   -2.35262   -2.17321  7.63%   261  886s
   358   335   -2.19513  144 2236   -2.35262   -2.17321  7.63%   264  890s
   359   335   -2.19513  145 1813   -2.35262   -2.17321  7.63%   264  902s
   360   335   -2.21708  145 2209   -2.35262   -2.17321  7.63%   264  914s
   361   335   -2.21708  146 1545   -2.35262   -2.17321  7.63%   264  915s
   371   338   -2.19513   56 1460   -2.35262   -2.17321  7.63%   263  920s
   379   346   -2.19513   64 1437   -2.35262   -2.17321  7.63%   257  925s
   395   362   -2.19513   75 3587   -2.35262   -2.17321  7.63%   250  930s
   411   378   -2.19513   84 4444   -2.35262   -2.17321  7.63%   242  935s
H  416   381                      -2.3526157   -2.17321  7.63%   239  937s
   425   392   -2.19513   92 4154   -2.35262   -2.17321  7.63%   236  940s
H  442   406                      -2.3526155   -2.17321  7.63%   227  944s
   444   410   -2.19513  105 3127   -2.35262   -2.17321  7.63%   226  945s
   466   429   -2.26292  120 1999   -2.35262   -2.17321  7.63%   217  950s
   488   451   -2.26292  139 1601   -2.35262   -2.17321  7.63%   211  955s
H  510   469                      -2.3526151   -2.17321  7.63%   203  960s
   511   470   -2.19513   85  658   -2.35262   -2.17321  7.63%   202  979s
   513   471   -2.17321   68  697   -2.35262   -2.17321  7.63%   202 1135s

Cutting planes:
  Gomory: 50
  Lift-and-project: 2
  Implied bound: 32
  MIR: 349
  Flow cover: 141
  Zero half: 489

Explored 513 nodes (368320 simplex iterations) in 1200.02 seconds (5893.73 work units)
Thread count was 1 (of 64 available processors)

Solution count 10: -2.35262 -2.35262 -2.35262 ... -7.1159

Time limit reached
Best objective -2.352615118845e+00, best bound -2.173208593160e+00, gap 7.6258%
Tree policy:
if player_total <= 5.0:
    if player_total <= 0.0:
        if dealer_total <= 0.0:
            if dealer_total <= 10.0:
                if dealer_total <= 3.0:
                    return '__random__'
                else:
                    return '(Skip)'
            else:
                if dealer_total <= 21.0:
                    return '(Skip)'
                else:
                    return '(Draw)'
        else:
            if dealer_total <= 22.0:
                return '(Skip)'
            else:
                if dealer_total <= 22.0:
                    return '(Draw)'
                else:
                    return '(Skip)'
    else:
        if skipped <= 0.0:
            if player_total <= 6.0:
                if dealer_total <= 22.0:
                    return '(Draw)'
                else:
                    return '(Skip)'
            else:
                return '__random__'
        else:
            if dealer_total <= 2.0:
                return '(Skip)'
            else:
                if dealer_total <= 21.0:
                    return '__random__'
                else:
                    return '(Draw)'
else:
    if dealer_total <= 2.0:
        if player_total <= 13.0:
            if player_total <= 5.0:
                return '(Skip)'
            else:
                if player_total <= 11.0:
                    return '(Draw)'
                else:
                    return '(Skip)'
        else:
            if player_total <= 21.0:
                return '(Skip)'
            else:
                return '(Draw)'
    else:
        if player_total <= 0.0:
            if dealer_total <= 22.0:
                return '(Draw)'
            else:
                return '(Skip)'
        else:
            if player_total <= 9.0:
                if skipped <= 0.0:
                    return '(Draw)'
                else:
                    return '__random__'
            else:
                if player_total <= 11.0:
                    return '(Draw)'
                else:
                    if skipped <= 0.0:
                        return '(Skip)'
                    else:
                        return '(Draw)'
Optimal decision tree (depth=7) value: -2.352615118845449
Writing result files...
