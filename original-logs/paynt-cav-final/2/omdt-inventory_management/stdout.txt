2025-01-21 16:11:54,369 - cli.py - This is Paynt version 0.1.0.
2025-01-21 16:11:54,369 - sketch.py - loading sketch from /home/imacak/disk2/synthesis/models/dts/omdt/inventory_management/model-random.drn ...
2025-01-21 16:11:54,369 - sketch.py - assuming sketch in PRISM format...
ERROR (SpiritErrorHandler.h:26): Parsing error at 3:1:  expecting <model type>, here:
	@type: MDP
	^

2025-01-21 16:11:54,657 - sketch.py - assuming sketch in DRN format...
2025-01-21 16:11:54,926 - prism_parser.py - loading properties from /home/imacak/disk2/synthesis/models/dts/omdt/inventory_management/discounted.props ...
2025-01-21 16:11:54,927 - prism_parser.py - found the following specification: optimality: R{"reward"}max=? [Cdiscount=99/100] 
2025-01-21 16:11:54,927 - sketch.py - found state valuations in /home/imacak/disk2/synthesis/models/dts/omdt/inventory_management/state-valuations.json, adding to the model...
2025-01-21 16:11:54,928 - sketch.py - sketch parsing OK
2025-01-21 16:11:54,968 - sketch.py - constructed explicit quotient having 101 states and 10201 choices
2025-01-21 16:11:54,968 - sketch.py - found the following specification optimality: R{"reward"}max=? [Cdiscount=99/100] 
2025-01-21 16:11:54,969 - mdp.py - MDP has 101/101 relevant states
2025-01-21 16:11:55,095 - mdp.py - MDP has 101 actions
2025-01-21 16:11:55,095 - mdp.py - found the following 1 variables: ['inventory:[0..100]']
2025-01-21 16:11:55,438 - decision_tree.py - the optimal scheduler has value: 967.8226692269506
2025-01-21 16:11:55,442 - decision_tree.py - the random scheduler has value: -960.240971558256

2025-01-21 16:11:55,443 - mdp.py - building tree of depth 0
2025-01-21 16:11:55,456 - statistic.py - synthesis initiated, design space: 101
2025-01-21 16:11:55,817 - synthesizer_ar.py - value 927.6808 achieved after 1.45 seconds
--------------------
Synthesis summary:
optimality objective: R{"reward"}max=? [Cdiscount=99/100] 

method: AR (decision tree), synthesis time: 1.03 s
number of holes: 1, family size: 101, quotient: 101 states / 10201 actions
explored: 100 %
MDP stats: avg MDP size: 101, iterations: 7

optimum: 927.680823
--------------------
2025-01-21 16:11:56,483 - decision_tree.py - families considered: 7
2025-01-21 16:11:56,483 - decision_tree.py - families skipped by construction: 0
2025-01-21 16:11:56,483 - decision_tree.py - families with schedulers preserved: 0
2025-01-21 16:11:56,483 - decision_tree.py - families model checked: 7
2025-01-21 16:11:56,483 - decision_tree.py - harmonizations attempted: 2
2025-01-21 16:11:56,483 - decision_tree.py - harmonizations succeeded: 1

2025-01-21 16:11:56,483 - decision_tree.py - printing synthesized assignment below:
2025-01-21 16:11:56,483 - decision_tree.py - A_0=(Buy_11)
2025-01-21 16:11:56,487 - decision_tree.py - double-checking specification satisfiability:  : 927.6808229068353

2025-01-21 16:11:56,487 - mdp.py - building tree of depth 1
2025-01-21 16:11:56,510 - statistic.py - synthesis initiated, design space: 1e6
2025-01-21 16:11:56,872 - synthesizer_ar.py - value 948.9069 achieved after 2.5 seconds
2025-01-21 16:11:56,876 - synthesizer_ar.py - value 951.3556 achieved after 2.51 seconds
2025-01-21 16:11:56,908 - synthesizer_ar.py - value 952.0958 achieved after 2.54 seconds
2025-01-21 16:11:57,283 - synthesizer_ar.py - value 955.2716 achieved after 2.91 seconds
> progress 100.99%, elapsed 3 s, estimated 3 s, iters = {MDP: 21}, opt = 955.2716
--------------------
Synthesis summary:
optimality objective: R{"reward"}max=? [Cdiscount=99/100] 

method: AR (decision tree), synthesis time: 3.99 s
number of holes: 4, family size: 1e6, quotient: 101 states / 10201 actions
explored: 200 %
MDP stats: avg MDP size: 101, iterations: 22

optimum: 955.271598
--------------------
2025-01-21 16:12:00,501 - decision_tree.py - families considered: 22
2025-01-21 16:12:00,501 - decision_tree.py - families skipped by construction: 0
2025-01-21 16:12:00,501 - decision_tree.py - families with schedulers preserved: 3
2025-01-21 16:12:00,501 - decision_tree.py - families model checked: 19
2025-01-21 16:12:00,501 - decision_tree.py - harmonizations attempted: 4
2025-01-21 16:12:00,501 - decision_tree.py - harmonizations succeeded: 2

2025-01-21 16:12:00,501 - decision_tree.py - printing synthesized assignment below:
2025-01-21 16:12:00,501 - decision_tree.py - V_0=inventory, inventory_0=1, A_1=(Buy_12), A_2=(Buy_8)
2025-01-21 16:12:00,505 - decision_tree.py - double-checking specification satisfiability:  : 955.2715976427129

2025-01-21 16:12:00,505 - mdp.py - building tree of depth 2
2025-01-21 16:12:00,548 - statistic.py - synthesis initiated, design space: 1e14
2025-01-21 16:12:01,329 - synthesizer_ar.py - value 963.9164 achieved after 6.96 seconds
2025-01-21 16:12:01,351 - synthesizer_ar.py - value 964.2478 achieved after 6.98 seconds
> progress 0.038%, elapsed 3 s, estimated 8694 s (2 hours), iters = {MDP: 17}, opt = 964.2478
2025-01-21 16:12:04,616 - synthesizer_ar.py - value 964.8321 achieved after 10.25 seconds
2025-01-21 16:12:04,634 - synthesizer_ar.py - value 965.5214 achieved after 10.26 seconds
> progress 0.97%, elapsed 6 s, estimated 677 s, iters = {MDP: 32}, opt = 965.5214
> progress 1.932%, elapsed 9 s, estimated 510 s, iters = {MDP: 49}, opt = 965.5214
> progress 97.95%, elapsed 13 s, estimated 13 s, iters = {MDP: 64}, opt = 965.5214
> progress 98.9%, elapsed 16 s, estimated 16 s, iters = {MDP: 77}, opt = 965.5214
2025-01-21 16:12:19,913 - synthesizer_ar.py - value 965.785 achieved after 25.54 seconds
2025-01-21 16:12:19,934 - synthesizer_ar.py - value 966.0764 achieved after 25.57 seconds
> progress 98.91%, elapsed 19 s, estimated 19 s, iters = {MDP: 92}, opt = 966.0764
> progress 100.84%, elapsed 23 s, estimated 22 s, iters = {MDP: 109}, opt = 966.0764
> progress 100.84%, elapsed 26 s, estimated 26 s, iters = {MDP: 120}, opt = 966.0764
> progress 100.84%, elapsed 29 s, estimated 29 s, iters = {MDP: 135}, opt = 966.0764
> progress 100.84%, elapsed 32 s, estimated 32 s, iters = {MDP: 152}, opt = 966.0764
> progress 100.841%, elapsed 36 s, estimated 35 s, iters = {MDP: 168}, opt = 966.0764
> progress 100.879%, elapsed 39 s, estimated 38 s, iters = {MDP: 181}, opt = 966.0764
> progress 100.879%, elapsed 42 s, estimated 41 s, iters = {MDP: 192}, opt = 966.0764
> progress 100.879%, elapsed 45 s, estimated 45 s, iters = {MDP: 203}, opt = 966.0764
> progress 100.88%, elapsed 48 s, estimated 48 s, iters = {MDP: 217}, opt = 966.0764
--------------------
Synthesis summary:
optimality objective: R{"reward"}max=? [Cdiscount=99/100] 

method: AR (decision tree), synthesis time: 52.13 s
number of holes: 10, family size: 1e14, quotient: 101 states / 10201 actions
explored: 101 %
MDP stats: avg MDP size: 101, iterations: 232

optimum: 966.076354
--------------------
2025-01-21 16:12:52,676 - decision_tree.py - families considered: 232
2025-01-21 16:12:52,676 - decision_tree.py - families skipped by construction: 0
2025-01-21 16:12:52,676 - decision_tree.py - families with schedulers preserved: 59
2025-01-21 16:12:52,676 - decision_tree.py - families model checked: 173
2025-01-21 16:12:52,676 - decision_tree.py - harmonizations attempted: 28
2025-01-21 16:12:52,676 - decision_tree.py - harmonizations succeeded: 0

2025-01-21 16:12:52,676 - decision_tree.py - printing synthesized assignment below:
2025-01-21 16:12:52,676 - decision_tree.py - V_0=inventory, inventory_0=2, V_1=inventory, inventory_1=0, A_2=(Buy_12), A_3=(Buy_10), V_4=inventory, inventory_4=4, A_5=(Buy_8), A_6=(Buy_5)
2025-01-21 16:12:52,680 - decision_tree.py - double-checking specification satisfiability:  : 966.0763537849454
2025-01-21 16:12:52,681 - decision_tree.py - the optimal scheduler has value: 967.8226692269506
2025-01-21 16:12:52,681 - decision_tree.py - the random scheduler has value: -960.240971558256
2025-01-21 16:12:52,681 - decision_tree.py - synthesized tree of depth 2 with 3 decision nodes
2025-01-21 16:12:52,681 - decision_tree.py - the synthesized tree has value 966.0763537849454
2025-01-21 16:12:52,681 - decision_tree.py - the synthesized tree has relative value: 0.999094264626403
2025-01-21 16:12:52,681 - decision_tree.py - printing the synthesized tree below:
if inventory<=2:
  if inventory<=0:
    (Buy_12)
  else:
    (Buy_10)
else:
  if inventory<=4:
    (Buy_8)
  else:
    (Buy_5)

2025-01-21 16:12:52,681 - decision_tree.py - exported decision tree to logs/01-21-all/2/omdt-inventory_management/tree.dot
2025-01-21 16:12:52,726 - decision_tree.py - exported decision tree visualization to logs/01-21-all/2/omdt-inventory_management/tree.png
2025-01-21 16:12:52,726 - decision_tree.py - synthesis finished after 58.36 seconds

ColoringSmt = 0.03 s (0.1 %)
ColoringSmt:: create choice colors = 0.013 s (0.0 %)
ColoringSmt:: create harmonizing variants = 0.017 s (0.0 %)
areChoicesConsistent = 0.847 s (1.5 %)
areChoicesConsistent::1 is scheduler consistent? = 0.409 s (0.7 %)
areChoicesConsistent::2 better unsat core = 0.271 s (0.5 %)
areChoicesConsistent::3 unsat core analysis = 0.157 s (0.3 %)
check = 0.933 s (1.6 %)
loadUnsatCore = 0.001 s (0.0 %)
selectCompatibleChoices = 1.041 s (1.8 %)
selectCompatibleChoices::1 is family sat = 0.721 s (1.2 %)
selectCompatibleChoices::2 state exploration = 0.318 s (0.5 %)
