2025-01-21 15:51:52,441 - cli.py - This is Paynt version 0.1.0.
2025-01-21 15:51:52,441 - sketch.py - loading sketch from /home/imacak/disk2/synthesis/models/dts/omdt/blackjack/model-random.drn ...
2025-01-21 15:51:52,441 - sketch.py - assuming sketch in PRISM format...
ERROR (SpiritErrorHandler.h:26): Parsing error at 3:1:  expecting <model type>, here:
	@type: MDP
	^

2025-01-21 15:51:52,449 - sketch.py - assuming sketch in DRN format...
2025-01-21 15:51:52,455 - prism_parser.py - loading properties from /home/imacak/disk2/synthesis/models/dts/omdt/blackjack/discounted.props ...
2025-01-21 15:51:52,455 - prism_parser.py - found the following specification: optimality: R{"reward"}max=? [Cdiscount=99/100] 
2025-01-21 15:51:52,456 - sketch.py - found state valuations in /home/imacak/disk2/synthesis/models/dts/omdt/blackjack/state-valuations.json, adding to the model...
2025-01-21 15:51:52,456 - sketch.py - sketch parsing OK
2025-01-21 15:51:52,457 - sketch.py - constructed explicit quotient having 533 states and 1599 choices
2025-01-21 15:51:52,457 - sketch.py - found the following specification optimality: R{"reward"}max=? [Cdiscount=99/100] 
2025-01-21 15:51:52,458 - mdp.py - MDP has 533/533 relevant states
2025-01-21 15:51:52,459 - mdp.py - MDP has 3 actions
2025-01-21 15:51:52,461 - mdp.py - found the following 3 variables: ['dealer_total:[0..22]', 'player_total:[0..22]', 'skipped:[0..1]']
2025-01-21 15:51:52,467 - decision_tree.py - the optimal scheduler has value: -2.1731936652535744
2025-01-21 15:51:52,468 - decision_tree.py - the random scheduler has value: -11.731985750064817

2025-01-21 15:51:52,468 - mdp.py - building tree of depth 0
2025-01-21 15:51:52,474 - statistic.py - synthesis initiated, design space: 3
2025-01-21 15:51:52,481 - synthesizer_ar.py - value -27.8078 achieved after 0.04 seconds
2025-01-21 15:51:52,482 - synthesizer_ar.py - value -4.122 achieved after 0.04 seconds
--------------------
Synthesis summary:
optimality objective: R{"reward"}max=? [Cdiscount=99/100] 

method: AR (decision tree), synthesis time: 0.01 s
number of holes: 1, family size: 3, quotient: 533 states / 1599 actions
explored: 100 %
MDP stats: avg MDP size: 448, iterations: 4

optimum: -4.122045
--------------------
2025-01-21 15:51:52,486 - decision_tree.py - families considered: 4
2025-01-21 15:51:52,486 - decision_tree.py - families skipped by construction: 0
2025-01-21 15:51:52,486 - decision_tree.py - families with schedulers preserved: 0
2025-01-21 15:51:52,486 - decision_tree.py - families model checked: 4
2025-01-21 15:51:52,486 - decision_tree.py - harmonizations attempted: 1
2025-01-21 15:51:52,486 - decision_tree.py - harmonizations succeeded: 2

2025-01-21 15:51:52,486 - decision_tree.py - printing synthesized assignment below:
2025-01-21 15:51:52,486 - decision_tree.py - A_0=(Skip)
2025-01-21 15:51:52,487 - decision_tree.py - double-checking specification satisfiability:  : -4.1220450006834595

2025-01-21 15:51:52,487 - mdp.py - building tree of depth 1
2025-01-21 15:51:52,505 - statistic.py - synthesis initiated, design space: 10773
2025-01-21 15:51:52,589 - synthesizer_ar.py - value -2.3954 achieved after 0.15 seconds
2025-01-21 15:51:52,599 - synthesizer_ar.py - value -2.3526 achieved after 0.16 seconds
--------------------
Synthesis summary:
optimality objective: R{"reward"}max=? [Cdiscount=99/100] 

method: AR (decision tree), synthesis time: 0.72 s
number of holes: 6, family size: 10773, quotient: 533 states / 1599 actions
explored: 200 %
MDP stats: avg MDP size: 480, iterations: 116

optimum: -2.352597
--------------------
2025-01-21 15:51:53,225 - decision_tree.py - families considered: 116
2025-01-21 15:51:53,225 - decision_tree.py - families skipped by construction: 0
2025-01-21 15:51:53,225 - decision_tree.py - families with schedulers preserved: 29
2025-01-21 15:51:53,225 - decision_tree.py - families model checked: 87
2025-01-21 15:51:53,225 - decision_tree.py - harmonizations attempted: 16
2025-01-21 15:51:53,225 - decision_tree.py - harmonizations succeeded: 1

2025-01-21 15:51:53,225 - decision_tree.py - printing synthesized assignment below:
2025-01-21 15:51:53,225 - decision_tree.py - V_0=player_total, dealer_total_0=7, player_total_0=11, skipped_0=0, A_1=(Draw), A_2=(Skip)
2025-01-21 15:51:53,227 - decision_tree.py - double-checking specification satisfiability:  : -2.3525971558866057
2025-01-21 15:51:53,227 - decision_tree.py - the optimal scheduler has value: -2.1731936652535744
2025-01-21 15:51:53,227 - decision_tree.py - the random scheduler has value: -11.731985750064817
2025-01-21 15:51:53,227 - decision_tree.py - synthesized tree of depth 1 with 1 decision nodes
2025-01-21 15:51:53,227 - decision_tree.py - the synthesized tree has value -2.3525971558866057
2025-01-21 15:51:53,227 - decision_tree.py - the synthesized tree has relative value: 0.9812315730856725
2025-01-21 15:51:53,227 - decision_tree.py - printing the synthesized tree below:
if player_total<=11:
  (Draw)
else:
  (Skip)

2025-01-21 15:51:53,227 - decision_tree.py - exported decision tree to logs/01-21-all/1/omdt-blackjack/tree.dot
2025-01-21 15:51:53,268 - decision_tree.py - exported decision tree visualization to logs/01-21-all/1/omdt-blackjack/tree.png
2025-01-21 15:51:53,268 - decision_tree.py - synthesis finished after 0.83 seconds

ColoringSmt = 0.011 s (1.3 %)
ColoringSmt:: create choice colors = 0.003 s (0.4 %)
ColoringSmt:: create harmonizing variants = 0.007 s (0.8 %)
areChoicesConsistent = 0.498 s (60.0 %)
areChoicesConsistent::1 is scheduler consistent? = 0.195 s (23.5 %)
areChoicesConsistent::2 better unsat core = 0.267 s (32.2 %)
areChoicesConsistent::3 unsat core analysis = 0.022 s (2.7 %)
check = 0.37 s (44.6 %)
loadUnsatCore = 0.0 s (0.0 %)
selectCompatibleChoices = 0.039 s (4.7 %)
selectCompatibleChoices::1 is family sat = 0.028 s (3.4 %)
selectCompatibleChoices::2 state exploration = 0.01 s (1.2 %)
